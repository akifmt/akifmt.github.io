<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blazor on akifmt</title><link>https://akifmt.github.io/tags/blazor/</link><description>Recent content in Blazor on akifmt</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 20 Jan 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://akifmt.github.io/tags/blazor/index.xml" rel="self" type="application/rss+xml"/><item><title>Blazor .NET 8 Migrating app from .NET 6 or .NET 7 to .NET 8</title><link>https://akifmt.github.io/dotnet/2024-01-20-blazor-.net8-migrating-app-from-.net-6-or-.net-7-to-.net-8/</link><pubDate>Sat, 20 Jan 2024 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2024-01-20-blazor-.net8-migrating-app-from-.net-6-or-.net-7-to-.net-8/</guid><description>Blazor .NET 8 Migrating app from .NET 6 or .NET 7 to .NET 8 Migrating your Blazor app from .NET 6 or .NET 7 to .NET 8 can bring several benefits, including improved performance, enhanced features, and bug fixes. Here are the steps you can follow to migrate your app successfully.
(Old) Request Flow Request → _Host → App → Component
(New) Request Flow Request → App → Routes → Component</description></item><item><title>Blazor .NET8 Server-side Rendering (SSR)</title><link>https://akifmt.github.io/dotnet/2024-01-16-blazor-.net8-server-side-rendering-ssr/</link><pubDate>Tue, 16 Jan 2024 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2024-01-16-blazor-.net8-server-side-rendering-ssr/</guid><description>Blazor .NET8 Server-side Rendering (SSR) Blazor .NET 8 offers several rendering options, including Server-side Rendering (SSR). SSR allows the initial rendering of a Blazor application to be performed on the server before being sent to the client. This approach provides benefits such as improved performance, SEO-friendliness, and better accessibility.
In Blazor .NET 8, there are two main ways to implement SSR: Global SSR with Prerendering and Per Page/Component SSR with Prerendering.</description></item><item><title>Blazor .NET 8 Hosting Models</title><link>https://akifmt.github.io/dotnet/2024-01-13-blazor-.net8-hosting-models/</link><pubDate>Sat, 13 Jan 2024 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2024-01-13-blazor-.net8-hosting-models/</guid><description>Blazor .NET8 Hosting Models Blazor, a web framework developed by Microsoft, offers three hosting models: Blazor Server, Blazor WebAssembly, and Blazor Hybrid. Each hosting model has its own unique characteristics and use cases.
Blazor Server With the Blazor Server hosting model, components are executed on the server from within an ASP.NET Core app. UI updates, event handling, and JavaScript calls are handled over a SignalR connection using the WebSockets protocol.</description></item></channel></rss>