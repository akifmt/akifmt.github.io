[{"categories":null,"contents":" Variable NAME=\u0026#34;John\u0026#34; echo $NAME echo \u0026#34;$NAME\u0026#34; echo \u0026#34;${NAME} Condition if [[ -z \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is empty\u0026#34; elif [[ -n \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is not empty\u0026#34; fi ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://akifmt.github.io/tr/notes/bash/basic/","summary":" Variable NAME=\u0026#34;John\u0026#34; echo $NAME echo \u0026#34;$NAME\u0026#34; echo \u0026#34;${NAME} Condition if [[ -z \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is empty\u0026#34; elif [[ -n \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is not empty\u0026#34; fi ","tags":null,"title":"Bash Variables"},{"categories":["IIS","Node.js","Dagitim","Yayinlama","iisnode"],"contents":"\nIIS üzerinde Node.js Dağıtım ve Yayınlama - iisnode\nWindows Server 2016 x64 ve IIS 10.0 üzerinde test edilmiştir. Farklı sürümler için tüm gereksinimler aynı sadece iisnode için uygun sürüm kurulmalıdır.\nGereksinimler:\nWebPlatformInstaller: WebPlatformInstaller IIS URL Rewrite extension: IIS URL Rewrite extension Node.js: node.js iisnode v0.22.1 x64 : iisnode v0.22.1 x64 Kurulum sonrasında projede \u0026ldquo;web.config\u0026rdquo; bulunmalıdır. Aşağıdaki config örneği Express Framework ile de kullanılabilir. App, server.js ile başlatılacaktır. Konsoldaki çıktılar logDirectory ile belirtilen klasorden kontrol edilebilir. \u0026ldquo;config\u0026rdquo; içerisindeki debug kısımları \u0026ldquo;production\u0026rdquo; aşamasına geçerken güncellenmelidir.\n\u0026lt;configuration\u0026gt; \u0026lt;system.webServer\u0026gt; \u0026lt;httpErrors existingResponse=\u0026#34;PassThrough\u0026#34; /\u0026gt; \u0026lt;handlers\u0026gt; \u0026lt;add name=\u0026#34;iisnode\u0026#34; path=\u0026#34;server.js\u0026#34; verb=\u0026#34;*\u0026#34; modules=\u0026#34;iisnode\u0026#34; /\u0026gt; \u0026lt;/handlers\u0026gt; \u0026lt;iisnode node_env=\u0026#34;%node_env%\u0026#34; nodeProcessCountPerApplication=\u0026#34;1\u0026#34; maxConcurrentRequestsPerProcess=\u0026#34;1024\u0026#34; maxNamedPipeConnectionRetry=\u0026#34;100\u0026#34; namedPipeConnectionRetryDelay=\u0026#34;250\u0026#34; maxNamedPipeConnectionPoolSize=\u0026#34;512\u0026#34; maxNamedPipePooledConnectionAge=\u0026#34;30000\u0026#34; asyncCompletionThreadCount=\u0026#34;0\u0026#34; initialRequestBufferSize=\u0026#34;4096\u0026#34; maxRequestBufferSize=\u0026#34;65536\u0026#34; watchedFiles=\u0026#34;*.js;iisnode.yml\u0026#34; uncFileChangesPollingInterval=\u0026#34;5000\u0026#34; gracefulShutdownTimeout=\u0026#34;60000\u0026#34; loggingEnabled=\u0026#34;true\u0026#34; logDirectory=\u0026#34;C:\\Logs\u0026#34; debuggingEnabled=\u0026#34;true\u0026#34; debugHeaderEnabled=\u0026#34;false\u0026#34; debuggerPortRange=\u0026#34;5058-6058\u0026#34; debuggerPathSegment=\u0026#34;debug\u0026#34; maxLogFileSizeInKB=\u0026#34;128\u0026#34; maxTotalLogFileSizeInKB=\u0026#34;1024\u0026#34; maxLogFiles=\u0026#34;20\u0026#34; devErrorsEnabled=\u0026#34;true\u0026#34; flushResponse=\u0026#34;false\u0026#34; enableXFF=\u0026#34;false\u0026#34; promoteServerVars=\u0026#34;\u0026#34; configOverrides=\u0026#34;iisnode.yml\u0026#34; /\u0026gt; \u0026lt;rewrite\u0026gt; \u0026lt;rules\u0026gt; \u0026lt;rule name=\u0026#34;rulename\u0026#34;\u0026gt; \u0026lt;match url=\u0026#34;/*\u0026#34; /\u0026gt; \u0026lt;action type=\u0026#34;Rewrite\u0026#34; url=\u0026#34;server.js\u0026#34; /\u0026gt; \u0026lt;/rule\u0026gt; \u0026lt;/rules\u0026gt; \u0026lt;/rewrite\u0026gt; \u0026lt;/system.webServer\u0026gt; \u0026lt;/configuration\u0026gt; ","date":"August 8, 2019","hero":"/tr/posts/2019-08-08-iisnode.js/blog17_IISNodejs.png","permalink":"https://akifmt.github.io/tr/posts/2019-08-08-iisnode.js/","summary":"IIS üzerinde Node.js Dağıtım ve Yayınlama - iisnode\nWindows Server 2016 x64 ve IIS 10.0 üzerinde test edilmiştir. Farklı sürümler için tüm gereksinimler aynı sadece iisnode için uygun sürüm kurulmalıdır.\nGereksinimler:\nWebPlatformInstaller: WebPlatformInstaller IIS URL Rewrite extension: IIS URL Rewrite extension Node.js: node.js iisnode v0.22.1 x64 : iisnode v0.22.1 x64 Kurulum sonrasında projede \u0026ldquo;web.config\u0026rdquo; bulunmalıdır. Aşağıdaki config örneği Express Framework ile de kullanılabilir. App, server.js ile başlatılacaktır. Konsoldaki çıktılar logDirectory ile belirtilen klasorden kontrol edilebilir.","tags":["IIS","Node.js","Dagitim","Yayinlama","iisnode"],"title":"IIS üzerinde Node.js Dağıtım ve Yayınlama - iisnode"},{"categories":["NodeJS","Farkli","Surumleri","Birarada","Kullanma"],"contents":"\nNodeJS Farklı Sürümleri Bir Arada Kullanma;\n# Kurulum: npm install -g nvmw # nvmw kurulumu nvmw install v8.12.0 # kullanılacak sürümlerin kurulumu nvmw use v8.12.0 # Use the specific version # Kullanım: nvmw help # Yardım nvmw install [version] # Versiyon kurulumu [version] nvmw uninstall [version] # Versiyon kaldırma [version] nvmw use [version] # Versiyon değiştirme [version] nvmw ls # Kurulan sürümlerin listesi NodeJS Sürümler Listesi: Sürümler\nNPM: NPM Linki\nGithub: Github Linki\n","date":"February 10, 2019","hero":"/tr/posts/2019-02-10-nodejsfarklisurumleribiraradakullanma/blog16_NodeJSFarkliSurumleriBiraradaKullanma.png","permalink":"https://akifmt.github.io/tr/posts/2019-02-10-nodejsfarklisurumleribiraradakullanma/","summary":"NodeJS Farklı Sürümleri Bir Arada Kullanma;\n# Kurulum: npm install -g nvmw # nvmw kurulumu nvmw install v8.12.0 # kullanılacak sürümlerin kurulumu nvmw use v8.12.0 # Use the specific version # Kullanım: nvmw help # Yardım nvmw install [version] # Versiyon kurulumu [version] nvmw uninstall [version] # Versiyon kaldırma [version] nvmw use [version] # Versiyon değiştirme [version] nvmw ls # Kurulan sürümlerin listesi NodeJS Sürümler Listesi: Sürümler\nNPM: NPM Linki","tags":["NodeJS","Farkli","Surumleri","Birarada","Kullanma"],"title":"NodeJS Farklı Sürümleri Birarada Kullanma"},{"categories":["Google","Cloud","Ubuntu",16.04,"VNC","Server"],"contents":"\nGoogle Cloud Ubuntu 16.04 üzerinde VNC Server;\n# Güncellemeler: sudo apt-get update sudo apt-get upgrade # Kurulum: sudo apt install xfce4 xfce4-goodies tightvncserver vncserver vncserver -kill :1 mv ~/.vnc/xstartup ~/.vnc/xstartup.bak nano ~/.vnc/xstartup xstartup içeriği: #!/bin/bash xrdb $HOME/.Xresources startxfce4 \u0026amp; sudo chmod +x ~/.vnc/xstartup vncserver Windows üzerinden bağlanmak için: İndirme Linki\n","date":"September 21, 2017","hero":"/tr/posts/2017-09-21-googlecloudubuntuvnc/blog15_GoogleCloudUbuntuVNC.jpg","permalink":"https://akifmt.github.io/tr/posts/2017-09-21-googlecloudubuntuvnc/","summary":"Google Cloud Ubuntu 16.04 üzerinde VNC Server;\n# Güncellemeler: sudo apt-get update sudo apt-get upgrade # Kurulum: sudo apt install xfce4 xfce4-goodies tightvncserver vncserver vncserver -kill :1 mv ~/.vnc/xstartup ~/.vnc/xstartup.bak nano ~/.vnc/xstartup xstartup içeriği: #!/bin/bash xrdb $HOME/.Xresources startxfce4 \u0026amp; sudo chmod +x ~/.vnc/xstartup vncserver Windows üzerinden bağlanmak için: İndirme Linki","tags":["Google","Cloud","Ubuntu",16.04,"VNC","Server"],"title":"Google Cloud Ubuntu Üzerinde VNC Server"},{"categories":["Torch","OpenCV Kurulum ve Test"],"contents":"\nUbuntu 16.04 üzerinde OpenCV ve Torch kurulumu;\n# Güncellemeler: sudo apt-get update sudo apt-get upgrade shutdown -r 0 sudo apt-get install git #Torch Kurulumu #Terminal de sırayla calistir: git clone https://github.com/torch/distro.git ~/torch --recursive cd ~/torch; bash install-deps; ./install.sh source ~/.bashrc source ~/.profile #OpenCV Kurulumu: sudo apt-get install cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev 2015-12-21 VERSION 3.1 OpenCV for Linux/Mac cd ~ wget https://github.com/Itseez/opencv/archive/3.1.0.zip --no-check-certificate unzip 3.1.0.zip cd opencv-3.1.0 mkdir build cd build cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_TBB=ON -D BUILD_NEW_PYTHON_SUPPORT=ON -D WITH_V4L=ON -D INSTALL_C_EXAMPLES=ON -D INSTALL_PYTHON_EXAMPLES=ON -D BUILD_EXAMPLES=ON -D WITH_QT=ON -D WITH_GTK=ON -D WITH_OPENGL=ON .. make sudo make install openCV build klasoru içinde iken; source ~/.profile luarocks install cv luarocks install camera luarocks install ffmpeg /// Eger luarocks paket kurulum hatası oluşursa düzeltmek için aşağıdaki satırı çalıştırıp tekrar paketleri kurun: /// sudo rm -rf ~/.cache/luarocks IDE: İndirme Linki\nKurulumu Test etmek için: İndirme Linki , Github Linki\n","date":"May 27, 2017","hero":"/tr/posts/2017-05-27-torchveopencvkurulum/blog14_torchVeopenCVKurulum.png","permalink":"https://akifmt.github.io/tr/posts/2017-05-27-torchveopencvkurulum/","summary":"Ubuntu 16.04 üzerinde OpenCV ve Torch kurulumu;\n# Güncellemeler: sudo apt-get update sudo apt-get upgrade shutdown -r 0 sudo apt-get install git #Torch Kurulumu #Terminal de sırayla calistir: git clone https://github.com/torch/distro.git ~/torch --recursive cd ~/torch; bash install-deps; ./install.sh source ~/.bashrc source ~/.profile #OpenCV Kurulumu: sudo apt-get install cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev 2015-12-21 VERSION 3.1 OpenCV for Linux/Mac cd ~ wget https://github.com/Itseez/opencv/archive/3.1.0.zip --no-check-certificate unzip 3.1.0.zip cd opencv-3.1.0 mkdir build cd build cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_TBB=ON -D BUILD_NEW_PYTHON_SUPPORT=ON -D WITH_V4L=ON -D INSTALL_C_EXAMPLES=ON -D INSTALL_PYTHON_EXAMPLES=ON -D BUILD_EXAMPLES=ON -D WITH_QT=ON -D WITH_GTK=ON -D WITH_OPENGL=ON .","tags":["Torch","OpenCV Kurulum ve Test"],"title":"Torch, OpenCV Kurulum ve Test"},{"categories":["epub calibre"],"contents":"\nBazı e-kitapların cover sayfalarında uyumsuzluktan dolayı diğer cihazlarda görünmemektedir. Bunun için çözüm calibre. Sadece cover sayfası için değil içerikte düzenleme imkanı da sağlamaktadır. İndirme Linki\nCover sayfası düzelemek için; \u0026ldquo;Edit Metadata\u0026rdquo; seçeneği ile aşağıdaki satırı düzenlemek veya yoksa, eklemek yeterli olacaktır.\n\u0026lt;item id=\u0026#34;cover_image\u0026#34; href=\u0026#34;cover.jpg\u0026#34; media-type=\u0026#34;image/jpeg\u0026#34;\u0026gt; ","date":"May 2, 2017","hero":"/tr/posts/2017-05-02-epubcover/blog13_epub.png","permalink":"https://akifmt.github.io/tr/posts/2017-05-02-epubcover/","summary":"\nBazı e-kitapların cover sayfalarında uyumsuzluktan dolayı diğer cihazlarda görünmemektedir. Bunun için çözüm calibre. Sadece cover sayfası için değil içerikte düzenleme imkanı da sağlamaktadır. İndirme Linki\nCover sayfası düzelemek için; \u0026ldquo;Edit Metadata\u0026rdquo; seçeneği ile aşağıdaki satırı düzenlemek veya yoksa, eklemek yeterli olacaktır.\n\u0026lt;item id=\u0026#34;cover_image\u0026#34; href=\u0026#34;cover.jpg\u0026#34; media-type=\u0026#34;image/jpeg\u0026#34;\u0026gt; ","tags":["epub calibre"],"title":"EPub Cover Düzenle(mek)"},{"categories":["Oyun Teorisi","Prisoner Dilemma","Nash Dengesi"],"contents":"\nİki kişi yakalanmış olsun. Biri diğerinin aleyhinde tanıklık eder diğeri ise suskun kalırsa, tanıklık eden serbest kalacak, susmayı tercih eden taraf ise 20 yıl hapse mahkûm edilecektir. Eğer ikiside suskun kalırsa 1\u0026rsquo;er yıl mahkum edilecekler. İkiside birbiri aleyhinde tanıklık ederse 5\u0026rsquo;er yıl mahkum edileceklerdir.\nİkisi içinde optimal olan seçenek ikisinin de sessiz kalmasıdır. Karşı tarafın kararından habersiz olan oyuncu 20 yıl hapis yatma ihtimalini göze alamayarak sessiz kalmayacak, karşı taraf aleyhinde tanıklık edecektir. Karşı taraf aleyhine tanıklık ederek 5 yıl gibi daha kısa süreli bir hapis cezasına razı olacak ya da serbest kalacaktır. Oyuncu burada kaybını en aza indirmeyi (kazancını maksimize etmeyi) hedef alacaktır. Karşı tarafın da aynı koşullar altında rasyonel davranarak tanıklık edeceği kaçınılmaz olacaktır.\nOyuncuların yegane amacı, diğer oyuncudan bağımsız olarak, kendi kazancını maksimize etmektir. Burada iki bireyinde diğerinin hareketini de göz önünde bulundurarak hareket etmesi ve maksimum kazanç yerine kendi durumu için iyiyi seçmesi durumu Nash Dengesini oluşturur.\n","date":"March 16, 2017","hero":"/tr/posts/2017-03-16-prisonersdilemmavenashdengesi/blog11_prisoners-dilemma-kural-tablosu.jpg","permalink":"https://akifmt.github.io/tr/posts/2017-03-16-prisonersdilemmavenashdengesi/","summary":"İki kişi yakalanmış olsun. Biri diğerinin aleyhinde tanıklık eder diğeri ise suskun kalırsa, tanıklık eden serbest kalacak, susmayı tercih eden taraf ise 20 yıl hapse mahkûm edilecektir. Eğer ikiside suskun kalırsa 1\u0026rsquo;er yıl mahkum edilecekler. İkiside birbiri aleyhinde tanıklık ederse 5\u0026rsquo;er yıl mahkum edileceklerdir.\nİkisi içinde optimal olan seçenek ikisinin de sessiz kalmasıdır. Karşı tarafın kararından habersiz olan oyuncu 20 yıl hapis yatma ihtimalini göze alamayarak sessiz kalmayacak, karşı taraf aleyhinde tanıklık edecektir.","tags":["Oyun Teorisi","Prisoner Dilemma","Nash Dengesi"],"title":"Oyun Teorisi - Prisoner's Dilemma ve Nash Dengesi"},{"categories":["shields.io"],"contents":"\nProjelerin ReadMe dosyaları için proje durumunu daha hoş bir şekilde gösteren bir araç. shields.io proje takip için kullanılan bir çok aracı desteklemektedir. Travis, Jenkins hatta Github, SourceForce üzerindeki projenin release durumlarına kadar badge eklenmesine izin vermekte.\n","date":"March 16, 2017","hero":"/tr/posts/2017-03-19-shields.io/blog12_shields.io.png","permalink":"https://akifmt.github.io/tr/posts/2017-03-19-shields.io/","summary":"Projelerin ReadMe dosyaları için proje durumunu daha hoş bir şekilde gösteren bir araç. shields.io proje takip için kullanılan bir çok aracı desteklemektedir. Travis, Jenkins hatta Github, SourceForce üzerindeki projenin release durumlarına kadar badge eklenmesine izin vermekte.","tags":["shields.io"],"title":"shields.io"},{"categories":["bash"],"contents":"\nAktif klasör: pwd Görünüm: ls \u0026#39;Detaylı Görünüm Parametreleri: -l *detaylı* -lrt *detaylı* -d *klasör* -r *read* -w *write* -x *execute*\u0026#39; Aktif Klasör Değiştirme: cd \u0026lt;klasör adı\u0026gt; Dosya Olusturma: touch \u0026lt;dosya adı\u0026gt; Ekrana Çıktı: ctrl+k\t\u0026#39;sağa doğru siler\u0026#39; echo \u0026#34;hello world\u0026#34; echo \u0026#34;hello coders\u0026#34; \u0026gt; dosyaadi\t\u0026#39;Ciktiyi dosyaya gonder\u0026#39; echo $?\t\u0026#39;Son işlemin sonucunu verir (0 başarılı)\u0026#39; cat dosyaadi\t\u0026#39;dosya içeriğini ekrana basar\u0026#39; more dosyaadi\t\u0026#39;dosya içeriğini ekrana basar\u0026#39; less dosyaadi\t\u0026#39;dosya içeriğini ekrana basar\u0026#39; nano dosyaadi\t\u0026#39;nano text editor ile açar\u0026#39; vim dosyaadi\t\u0026#39;vim text editor ile açar\u0026#39; head -n 5 output-1.txt\t\u0026#39;ilk 5 satırı göster\u0026#39; tail -n 5 output-1.txt\t\u0026#39;son 5 satırı göster\u0026#39; tail -f log-file.txt\t\u0026#39;son satırları yazdırır ve yeni gelen satırlatı takip eder\u0026#39; Klasör Oluşturma: mkdir klasoradi\t\u0026#39;Klasör oluşturur\u0026#39; İçerik Göndererek veya Alarak Çalıştırma: ./prog \u0026lt; input-1.txt\t\u0026#39;input-1 içeriğini prog a göndererek çalıştırır.\u0026#39; ./my-prog \u0026lt; input-1.txt \u0026gt; output-1.txt\t\u0026#39;çıktıları output a atar\u0026#39; ./my-prog 12 2\u0026gt; output-1.txt\t\u0026#39;stderr den gelenleri output a yönlendirir\u0026#39; ./my-prog \u0026lt; input-1.txt \u0026gt; all-output.txt 2\u0026gt;\u0026amp;1\t\u0026#39;stderr, stdoutput a yönlendir\u0026#39; echo \u0026#34;asdasd\u0026#34; \u0026gt;\u0026gt; log-file.txt \u0026#39;dosya sonuna ekler\u0026#39; Derleme: gcc -o my-prog my-prog.c\t\u0026#39;gcc ile derler.\u0026#39; Process\u0026rsquo;de Arama: ps aux | grep my-prog\t\u0026#39;çalışan process ler arasında arama yapma\u0026#39; Process İşlemleri: \u0026#39;Tüm prosesler bunlarla başlar: 0:stdinput 1:stdoutput 2:stderror\u0026#39; \u0026#39;Prosesslerin tutulduğu sistem proc klasörüdür.\u0026#39; \u0026#39; ctrl+c : interrupt (sigint) (sigterm) (sighup) -\u0026gt; konfigurasyonu update eder (sigkill) -\u0026gt; sorgusuz öldürür ctrl+l : clear terminal işlemi yapar ctrl+d : (end of stream) çalışan aktif process i öldürür \u0026#39; kill -l\t\u0026#39;kill için sinyaller listesi gösterir\u0026#39; kill -INT 12334\t\u0026#39;sigint sinyali gönderir\u0026#39; kill -TERM 12334\t\u0026#39;sigterm sinyali ile öldürür\u0026#39; cat cmdline\t\u0026#39;caliştığı konum\u0026#39; cat environ\t\u0026#39;process in enviroment veriable ları\u0026#39; cat limits\t\u0026#39;process limitleri\u0026#39; top\t\u0026#39;anlık olarak işlemleri gösterir\u0026#39; htop\t\u0026#39;güncelleyerek gösterir\u0026#39; Path İşlemleri: echo $PATH\t\u0026#39;path içeriği\u0026#39; export PATH=$PATH:/home/vm/deneme\t\u0026#39;path in sonuna yeni dizin ekleme\u0026#39; Device İşlemleri: ls /dev\t\u0026#39;tüm device ları gösterir\u0026#39; ls -lrt /dev/null\t\u0026#39;çıktıları null a gönderir\u0026#39; Veri Transferi: curl http://akifmt.github.io \u0026#39;indirir\u0026#39; curl http://akifmt.github.io \u0026gt; /dev/null \u0026#39;indirir sonuçları null e gönderir\u0026#39; curl -s http://akifmt.github.io \u0026gt; /dev/null\t\u0026#39;silence modda indirir sonuçları null e gönderir\u0026#39; curl http://akifmt.github.io \u0026gt; /dev/null 2\u0026gt;\u0026amp;1\t\u0026#39;stderr den gelenleri de yönlendir\u0026#39; curl -s https://demo.consul.io/v1/catalog/services\t\u0026#39;silence modda indirir\u0026#39; curl -s https://demo.consul.io/v1/catalog/service/web?pretty\t\u0026#39;silence modda indirir\u0026#39; curl -s https://demo.consul.io/v1/catalog/service/web?pretty | grep Address\t\u0026#39;silence modda indirir Address satırlarını bulur\u0026#39; curl -s https://demo.consul.io/v1/catalog/service/web?pretty | jq \u0026#39;.[0].Address\u0026#39;\t\u0026#39;Address kısmının ilkini alır\u0026#39; curl -s https://demo.consul.io/v1/catalog/service/web?pretty | jq -r \u0026#39;.[].Address\u0026#39;\t\u0026#39;Tüm Address kısımlarının tümünü alır\u0026#39; curl -s https://demo.consul.io/v1/catalog/service/web?pretty | jq -r \u0026#39;.[].Address\u0026#39; | while read serverAddr; do curl -s $serverAddr \u0026gt; $serverAddr.txt; done \u0026#39;Address satırlarının tümünü bulur sağa gönderir, Address adlarına göre dosya oluşturur\u0026#39; Dosya İşlemleri: echo \u0026#34;asd,qwe,qwwww\u0026#34; | cut -d, -f2\t\u0026#39;, den sonra 2. kelimeyi alır\u0026#39; echo \u0026#34;asd;qwe;qwwww\u0026#34; | cut -d\\; -f2\t\u0026#39;; den sonra 2. kelimeyi alır\u0026#39; echo \u0026#34;asd,qwe,qwwww\u0026#34; | awk -F, \u0026#39;{print $2}\u0026#39;\t\u0026#39;, den sonra 2. kelimeyi alır\u0026#39; ls -lrt | awk \u0026#39;{print $9}\u0026#39;\t\u0026#39;9. sütunları yazdır\u0026#39; ls -lrt | cat\t\u0026#39;pipe çıktıyı sağdakine verir\u0026#39; wc -l\t\u0026#39;line sayar\u0026#39; ls -lrt | wc -l\t\u0026#39;ls den gelen sonucları sağa gönderir satır sayar\u0026#39; find . -name my-prog\t\u0026#39;ismi my-prog ile başlayanları bulur\u0026#39; find . -type f\t\u0026#39;dosyaları bulur\u0026#39; find . -name \u0026#34;*.txt\u0026#34;\t\u0026#39;uzantısı txt olanı bulur\u0026#39; find -name \u0026#34;*.txt\u0026#34; | while read filename; do echo $filename; done\t\u0026#39;txt bulur saüa gönderir filename olarak yazdırır\u0026#39; find -name \u0026#34;*.txt\u0026#34; | while read filename; do rm $filename; done\t\u0026#39;bulduğu dosyaları siler\u0026#39; dd if=/dev/zero of=zero-file.txt bs=512 count=2\t\u0026#39;2x512KB boş dosya oluşturur. \u0026#39; hexdump zero-file.txt \u0026#39;hex olarak ve tekrar eden kısımları kısaltarak gösterir.\u0026#39; hexdump -v zero-file.txt\t\u0026#39;hepsini gösterir kısaltmasız olarak gösterir\u0026#39; dd if=/dev/urandom of=random-file.txt bs=512 count=4\t\u0026#39;rastgele değerli 4x512KB dosya oluşturur\u0026#39; İşlemci Üzerinde İşlemler: dd if=/dev/zero of=null \u0026#39;sıfır üreterek null aygıtına gönderir (kontrolsüz işlemci yüklemesi)\u0026#39; stress-ng -c 1 -l 40\t\u0026#39;1 CPU üzerinde %40 yükleme yapar\u0026#39; stress-ng -c 0 -l 40\t\u0026#39;tüm CPUlarde %40 yükleme yapar\u0026#39; Ağ Üzerinde İşlemler: ifconfig\t\u0026#39;ağ cihazlarını ve bağlantıları gösterir\u0026#39; route -n\t\u0026#39;tüm erişimleri gösterir\u0026#39; sudo wondershaper ens33 512 512 \u0026#39;512Kpbs indirme ve gönderme sınırlaması yapar\u0026#39; sudo wondershaper ens33 clear\t\u0026#39;limitleri kaldırır\u0026#39; Satır Sonları (lineending): OS Desc Code Linux LF (line feed) (\\n) Unix CR (carriage return) (\\r) Windows CRLF (carriage return line feed) \\r\\n ","date":"February 24, 2017","hero":"/tr/posts/2017-02-24-linuxbashkomutlari/blog10_bash.png","permalink":"https://akifmt.github.io/tr/posts/2017-02-24-linuxbashkomutlari/","summary":"Aktif klasör: pwd Görünüm: ls \u0026#39;Detaylı Görünüm Parametreleri: -l *detaylı* -lrt *detaylı* -d *klasör* -r *read* -w *write* -x *execute*\u0026#39; Aktif Klasör Değiştirme: cd \u0026lt;klasör adı\u0026gt; Dosya Olusturma: touch \u0026lt;dosya adı\u0026gt; Ekrana Çıktı: ctrl+k\t\u0026#39;sağa doğru siler\u0026#39; echo \u0026#34;hello world\u0026#34; echo \u0026#34;hello coders\u0026#34; \u0026gt; dosyaadi\t\u0026#39;Ciktiyi dosyaya gonder\u0026#39; echo $?\t\u0026#39;Son işlemin sonucunu verir (0 başarılı)\u0026#39; cat dosyaadi\t\u0026#39;dosya içeriğini ekrana basar\u0026#39; more dosyaadi\t\u0026#39;dosya içeriğini ekrana basar\u0026#39; less dosyaadi\t\u0026#39;dosya içeriğini ekrana basar\u0026#39; nano dosyaadi\t\u0026#39;nano text editor ile açar\u0026#39; vim dosyaadi\t\u0026#39;vim text editor ile açar\u0026#39; head -n 5 output-1.","tags":["bash"],"title":"Linux Bash Komutları"},{"categories":["vmware hyper v"],"contents":"\nHyper-V kapatmak için; Cmd üzerinde yönetici olarak: bcdedit /set hypervisorlaunchtype off Yeniden başlatıldığında vmware kullanılabilir.\nHyper-V tekrar açmak için Cmd üzerinde yönetici olarak: bcdedit /set hypervisorlaunchtype auto Yeniden başlatıldığında Hyper-V kullanılabilir.\n","date":"February 22, 2017","hero":"/tr/posts/2017-02-22-hypervmwarebirlikte/blog9_vmwarehyperv.png","permalink":"https://akifmt.github.io/tr/posts/2017-02-22-hypervmwarebirlikte/","summary":"Hyper-V kapatmak için; Cmd üzerinde yönetici olarak: bcdedit /set hypervisorlaunchtype off Yeniden başlatıldığında vmware kullanılabilir.\nHyper-V tekrar açmak için Cmd üzerinde yönetici olarak: bcdedit /set hypervisorlaunchtype auto Yeniden başlatıldığında Hyper-V kullanılabilir.","tags":["vmware hyper v"],"title":"Vmware ve Hyper-V Birlikte Kullan(mak)"},{"categories":["Agile"],"contents":"\nAgile Metodoloji (Çevik Metodoloji) yazılım sistemlerini etkili ve verimli bir şekilde modellemeye ve dokümantasyonunu yapmaya yönelik pratiğe dayalı yöntemlere denir.\nYazılım projeleri yaşam döngüleri boyunca kaynakların doğru kullanılmaması, yanlış önceliklendirmeler ve müşteri taleplerinin doğru anlaşılamaması nedeni ile başarısızlık tehlikesi ile karşı karşıya kalmaktadır. The Standish Group’un 2009 yılı Chaos Report’una göre yazılım projeleri dünya genelinde %68 oranında başarısızlıkla sonuçlanmaktadır. Bu durum, Avrupa ve Amerika’daki büyük şirketleri, üretkenliği daha yüksek projeler üretmek üzere çeşitli yöntemleri denemeye yöneltmiş ve çoğu şirket yönetimde ve uygulamada en başarılı buldukları Agile (çevik) yazılım geliştirme yaklaşımlarını benimsemişlerdir.\nAgile yaklaşımlar uygulandığında artan;\nproje üretkenliği, projenin değişikliklere hızlı adapte olabilme yeteneği, proje kalitesi ve projenin pazara çıkış hızı doğrultusunda projelerin başarı oranları %80’lere çıkartılabilmiş ve elde edilen önemli rekabet avantajı ile birlikte proje karlılıkları artırılmıştır.\nKaynak: www.acm-software.com/agile\n","date":"February 20, 2017","hero":"/tr/posts/2017-02-20-agile/blog8_agile.jpg","permalink":"https://akifmt.github.io/tr/posts/2017-02-20-agile/","summary":"Agile Metodoloji (Çevik Metodoloji) yazılım sistemlerini etkili ve verimli bir şekilde modellemeye ve dokümantasyonunu yapmaya yönelik pratiğe dayalı yöntemlere denir.\nYazılım projeleri yaşam döngüleri boyunca kaynakların doğru kullanılmaması, yanlış önceliklendirmeler ve müşteri taleplerinin doğru anlaşılamaması nedeni ile başarısızlık tehlikesi ile karşı karşıya kalmaktadır. The Standish Group’un 2009 yılı Chaos Report’una göre yazılım projeleri dünya genelinde %68 oranında başarısızlıkla sonuçlanmaktadır. Bu durum, Avrupa ve Amerika’daki büyük şirketleri, üretkenliği daha yüksek projeler üretmek üzere çeşitli yöntemleri denemeye yöneltmiş ve çoğu şirket yönetimde ve uygulamada en başarılı buldukları Agile (çevik) yazılım geliştirme yaklaşımlarını benimsemişlerdir.","tags":["Agile"],"title":"Agile"},{"categories":["Docker"],"contents":"Docker nedir Docker, uygulamayı dağıtan açık kaynaklı bir projedir. Sanal bir makine gibi çalışır, ancak daha iyidir. Bir linux örneğini kullanarak kendisini işletim sisteminden yalıtır ve daha güvenli çalışır. Docker resmi internet sitesinde kendisini şöyle tanımlıyor;\nDocker konteynerleri, bir yazılım parçasını çalıştırmak için gereken her şeyi içeren eksiksiz bir dosya sistemine sarar: kod, çalışma zamanı, sistem araçları, sistem kitaplıkları – bir sunucuya yüklenebilecek her şey. Bu, yazılımın ortamından bağımsız olarak her zaman aynı şekilde çalışacağını garanti eder.\nDaha fazla bilgi için, www.docker.com\n","date":"November 24, 2016","hero":"/tr/posts/2016-11-24-docker/blog7_docker.png","permalink":"https://akifmt.github.io/tr/posts/2016-11-24-docker/","summary":"Docker nedir Docker, uygulamayı dağıtan açık kaynaklı bir projedir. Sanal bir makine gibi çalışır, ancak daha iyidir. Bir linux örneğini kullanarak kendisini işletim sisteminden yalıtır ve daha güvenli çalışır. Docker resmi internet sitesinde kendisini şöyle tanımlıyor;\nDocker konteynerleri, bir yazılım parçasını çalıştırmak için gereken her şeyi içeren eksiksiz bir dosya sistemine sarar: kod, çalışma zamanı, sistem araçları, sistem kitaplıkları – bir sunucuya yüklenebilecek her şey. Bu, yazılımın ortamından bağımsız olarak her zaman aynı şekilde çalışacağını garanti eder.","tags":["Docker"],"title":"Docker Nedir?"},{"categories":["Android 7 Nougat"],"contents":"\nYeni özellikler\nÇoklu pencere / aynı ekranda iki uygulama çalıştırma (En önemli özellik) Yeni bildirim merkezi Yenilenen ayarlar menüsü Bildirimlerin ayarları zenginleştirildi. Artık her bildirimin gözükmesini engelleyebileceğiz. Bildirimdeki ikonlara uzun basarak, ayarların ilgili menüsüne gidebilme özelliği eklendi Batarya grafiği yenileniyor ","date":"November 2, 2016","hero":"/tr/posts/2016-11-02-android7nougat/blog6_android7n_teaser.png","permalink":"https://akifmt.github.io/tr/posts/2016-11-02-android7nougat/","summary":"\nYeni özellikler\nÇoklu pencere / aynı ekranda iki uygulama çalıştırma (En önemli özellik) Yeni bildirim merkezi Yenilenen ayarlar menüsü Bildirimlerin ayarları zenginleştirildi. Artık her bildirimin gözükmesini engelleyebileceğiz. Bildirimdeki ikonlara uzun basarak, ayarların ilgili menüsüne gidebilme özelliği eklendi Batarya grafiği yenileniyor ","tags":["Android 7 Nougat"],"title":"Android 7 Nougat"},{"categories":["monte carlo metodu"],"contents":"\nNedir: Rastgele sayılar kullanılarak sistemlerin modellenmesinde kullanılabilir. Sistemin kesin sonucunun olduğu bazı durumlarda, veya olmadığı tüm durumlarda uygulanabilir. Örnek sayısı doğru sonuçlar elde etmede büyük önem taşımaktadır. Pi sayısı hesaplama, yazı tura ve zar hesaplaması örnek gösterilebilir.\nÖrnek: C ile Yazı-Tura double rastgele(){ double r = (double) rand()/RAND_MAX; return r; } int main() { int i, tura, yazi, n; double r, p; printf(\u0026#34;deney sayisini girin: \u0026#34;); scanf(\u0026#34;%d\u0026#34;,\u0026amp;n); srand( time(NULL) ); for(tura=0, i=1; i\u0026lt;=n; i++){ r = rastgele(); if(r\u0026lt;0.5) tura++; } p = (double) tura/n; yazi = n-tura; printf(\u0026#34;tura sayisi: %d\\n\u0026#34;,tura); printf(\u0026#34;yazi sayisi: %d\\n\u0026#34;,yazi); printf(\u0026#34;Olasiliklar: %lf %lf\\n\u0026#34;,p, 1.0-p); return 0; } ","date":"October 9, 2016","hero":"/tr/posts/2016-10-09-montecarlometodu/blog5_montecarlometodu.png","permalink":"https://akifmt.github.io/tr/posts/2016-10-09-montecarlometodu/","summary":"Nedir: Rastgele sayılar kullanılarak sistemlerin modellenmesinde kullanılabilir. Sistemin kesin sonucunun olduğu bazı durumlarda, veya olmadığı tüm durumlarda uygulanabilir. Örnek sayısı doğru sonuçlar elde etmede büyük önem taşımaktadır. Pi sayısı hesaplama, yazı tura ve zar hesaplaması örnek gösterilebilir.\nÖrnek: C ile Yazı-Tura double rastgele(){ double r = (double) rand()/RAND_MAX; return r; } int main() { int i, tura, yazi, n; double r, p; printf(\u0026#34;deney sayisini girin: \u0026#34;); scanf(\u0026#34;%d\u0026#34;,\u0026amp;n); srand( time(NULL) ); for(tura=0, i=1; i\u0026lt;=n; i++){ r = rastgele(); if(r\u0026lt;0.","tags":["monte carlo metodu"],"title":"Monte Carlo Metodu"},{"categories":["Raspberry Pi","Remote Desktop Connection"],"contents":"\nProblem: Raspbery Pi Uzak Bağlantı TR Klavye Tanımama Çözüm: km-041f.ini dosya eksikliği\nkm-041f.ini dosyayı Raspberry Pi üzerinde /etc/xrdp/ dizinine kopyalayın. xrdp yeniden başlatıldığında TR karakterler artık problem olmaz.\nUnutulmaması gereken kısım dizine root olarak erişmelisiniz.\nBenim izlediğim adım; RasPi üzerinde sudo pcmanfm km-041f.ini dosya /etc/xrdp/ buraya kopyalanır.\nsudo service xrdp restart\nNot: Dosyayı nette bulmakta problem yaşayanlar için, ben bu repodan indirdim: Link ","date":"September 18, 2016","hero":"/tr/posts/2016-09-18-raspberrypiilerdcbaglantisi/blog4_rasPiRDC.png","permalink":"https://akifmt.github.io/tr/posts/2016-09-18-raspberrypiilerdcbaglantisi/","summary":"\nProblem: Raspbery Pi Uzak Bağlantı TR Klavye Tanımama Çözüm: km-041f.ini dosya eksikliği\nkm-041f.ini dosyayı Raspberry Pi üzerinde /etc/xrdp/ dizinine kopyalayın. xrdp yeniden başlatıldığında TR karakterler artık problem olmaz.\nUnutulmaması gereken kısım dizine root olarak erişmelisiniz.\nBenim izlediğim adım; RasPi üzerinde sudo pcmanfm km-041f.ini dosya /etc/xrdp/ buraya kopyalanır.\nsudo service xrdp restart\nNot: Dosyayı nette bulmakta problem yaşayanlar için, ben bu repodan indirdim: Link ","tags":["Raspberry Pi","Remote Desktop Connection"],"title":"Raspberry Pi Uzak Masaüstü Türkçe Klavye Problemi"},{"categories":["remote desktop","amazon aws","microsoft azure"],"contents":"\nAWS veya Azure üzerindeki VPS cihazlarda gerçek bir ses kartı bulunmadığı için bu cihazlar üzerinde ses almak mümküm olmamakta. Bunun için çözüm ise VA, yani virtual audio. Uygun uygulama çözümümüz VAC kurulumu ile çözülmekte. Uygulama sanal bir ses sürücüsü oluşturarak sesi cihazımıza yönlendirme sağlamaktadır.\nProblem: VPS üzerinden Ses Çözüm: Virtual Audio Cable 4.15 kurulumu ve Ayarlama\nVPS üzerinde test ettiğim \u0026ldquo;Virtual Audio Cable 4.15\u0026rdquo; kurulumunu yapınız.\nVPS üzerinde \u0026ldquo;tsconfig.msc\u0026rdquo; içerisinde RDP-Tcp -\u0026gt; client services -\u0026gt; audio seçeneğini kaldırın. VPS resetleyin.\nBu aşamadan sonra ses hazır.\nİndirme linki:\nGoogle -\u0026gt; Virtual Audio Cable 4.15 ","date":"August 22, 2016","hero":"/tr/posts/2016-08-22-rdcileawsveazurevpsuzerindevacileses/blog3_vac_teaser.png","permalink":"https://akifmt.github.io/tr/posts/2016-08-22-rdcileawsveazurevpsuzerindevacileses/","summary":"AWS veya Azure üzerindeki VPS cihazlarda gerçek bir ses kartı bulunmadığı için bu cihazlar üzerinde ses almak mümküm olmamakta. Bunun için çözüm ise VA, yani virtual audio. Uygun uygulama çözümümüz VAC kurulumu ile çözülmekte. Uygulama sanal bir ses sürücüsü oluşturarak sesi cihazımıza yönlendirme sağlamaktadır.\nProblem: VPS üzerinden Ses Çözüm: Virtual Audio Cable 4.15 kurulumu ve Ayarlama\nVPS üzerinde test ettiğim \u0026ldquo;Virtual Audio Cable 4.15\u0026rdquo; kurulumunu yapınız.\nVPS üzerinde \u0026ldquo;tsconfig.msc\u0026rdquo; içerisinde RDP-Tcp -\u0026gt; client services -\u0026gt; audio seçeneğini kaldırın.","tags":["remote desktop","amazon aws","microsoft azure"],"title":"Remote Desktop ile Amazon AWS ve Azure üzerinde Uygulama Sesleri"},{"categories":["INVICTUS"],"contents":"\nFirma siber güvenlik ve güvenlik eğitimleri üzerine çalışmaktadır. Ben de arkadaşım referansı ile iletişime geçtim. Daha ilk günden gördüğüm samimiyet beni şaşırttı. Firmada tam bir aile ilişkisini, yönetimden çalışana herkeste gördüm. Deneyimli ekip ile, siber güvenlik konusunda sıfırdan başlayarak üst-düzey güvenlik seviyesinde eğitin vererek her noktada aralarına dâhil ettiler. Firma siber güvenlik konusunda tecrübeli, hatta dünya markası olma yolunda çalışmalar yapmaktadır. Firmanın siber güvenlikte eğitim faaliyetleri de alanında ilk denebilecek kadar başarılı. Firmanın yönetiminden çalışanına kadar herkese teşekkürler. Siber güvenlik ile ilgililerin linki takip etmelerini öneririm. Firma bilgileri aşağıda bulunmaktadır.\nwww.invictuseurope.com İletişim: www.invictuseurope.com/iletisim Eğitim: egitim.invictuseurope.com\n","date":"August 3, 2016","hero":"/tr/posts/2016-08-03-invictusbilisimguvenlikstajyapmak/blog2_invictus_teaser.png","permalink":"https://akifmt.github.io/tr/posts/2016-08-03-invictusbilisimguvenlikstajyapmak/","summary":"Firma siber güvenlik ve güvenlik eğitimleri üzerine çalışmaktadır. Ben de arkadaşım referansı ile iletişime geçtim. Daha ilk günden gördüğüm samimiyet beni şaşırttı. Firmada tam bir aile ilişkisini, yönetimden çalışana herkeste gördüm. Deneyimli ekip ile, siber güvenlik konusunda sıfırdan başlayarak üst-düzey güvenlik seviyesinde eğitin vererek her noktada aralarına dâhil ettiler. Firma siber güvenlik konusunda tecrübeli, hatta dünya markası olma yolunda çalışmalar yapmaktadır. Firmanın siber güvenlikte eğitim faaliyetleri de alanında ilk denebilecek kadar başarılı.","tags":["INVICTUS"],"title":"INVICTUS Bilişim Güvenlik Staj Yap(mak)"},{"categories":["pokemon go","nedir"],"contents":"Mobil platformlar üzerinden oynanabilen bir oyun. En büyük yenilik ve özelliği sanallaştırılmış gerçeklik teknolojisidir. Gerçek konum bilgileri kullanarak daha iyi bir oyuncu deneyimi, 722 Pokemon karakterini yakalama, takaslar ve savaşlar yapabilmekte. Resmi tanıtımı şöyledir:\n","date":"July 10, 2016","hero":"/tr/posts/2016-07-10-pokemongooynamak/blog1_pokemon_go_logo.png","permalink":"https://akifmt.github.io/tr/posts/2016-07-10-pokemongooynamak/","summary":"Mobil platformlar üzerinden oynanabilen bir oyun. En büyük yenilik ve özelliği sanallaştırılmış gerçeklik teknolojisidir. Gerçek konum bilgileri kullanarak daha iyi bir oyuncu deneyimi, 722 Pokemon karakterini yakalama, takaslar ve savaşlar yapabilmekte. Resmi tanıtımı şöyledir:","tags":["pokemon go","nedir"],"title":"Pokemon GO Oynama(k)!"}]