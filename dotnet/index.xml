<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>dotnet on akifmt</title><link>https://akifmt.github.io/dotnet/</link><description>Recent content in dotnet on akifmt</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 18 Aug 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://akifmt.github.io/dotnet/index.xml" rel="self" type="application/rss+xml"/><item><title>Blazor Scheduling with Quartz.NET</title><link>https://akifmt.github.io/dotnet/2023-08-18-blazor-scheduling-with-quartz.net/</link><pubDate>Fri, 18 Aug 2023 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2023-08-18-blazor-scheduling-with-quartz.net/</guid><description>Blazor Scheduling with Quartz.NET Blazor: Blazor is a web framework that allows developers to build interactive web UIs using C# instead of JavaScript. It enables full-stack development with .NET.
Quartz.NET: Quartz.NET is a popular open-source job scheduling library for .NET applications. It provides a flexible and powerful way to schedule and execute jobs at specified intervals.
Scheduling: Scheduling refers to the process of defining when and how often a job or task should be executed.</description><media:content url="https://akifmt.github.io/dotnet/2023-08-18-blazor-scheduling-with-quartz.net/blazor_dotnet.jpg" medium="image"/></item><item><title>Blazor Serilog Logging to Console, File and Database</title><link>https://akifmt.github.io/dotnet/2023-08-15-blazor-serilog-logging/</link><pubDate>Tue, 15 Aug 2023 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2023-08-15-blazor-serilog-logging/</guid><description>Blazor Serilog Logging to Console, File and Database Logging: Logging is the process of recording events, messages, or exceptions that occur during the execution of an application. It helps developers understand the behavior of the application, diagnose issues, and track its performance. Logging is an essential aspect of software development and plays a crucial role in maintaining and troubleshooting applications.
Serilog: Serilog is a popular logging library for .NET applications.</description><media:content url="https://akifmt.github.io/dotnet/2023-08-15-blazor-serilog-logging/blazor_dotnet.jpg" medium="image"/></item><item><title>Blazor Implementing Google reCAPTCHA v2</title><link>https://akifmt.github.io/dotnet/2023-08-13-blazor-implementing-google-recaptcha-v2/</link><pubDate>Sun, 13 Aug 2023 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2023-08-13-blazor-implementing-google-recaptcha-v2/</guid><description>Blazor Implementing Google reCAPTCHA v2 How to implement Google reCAPTCHA v2 in a Blazor application using C#. Google reCAPTCHA is a free service provided by Google that helps protect websites from spam and abuse. It uses advanced risk analysis techniques to distinguish between humans and bots.
Site Key: A unique key provided by Google when you register your website to use reCAPTCHA. It is used to identify your website when making API requests.</description><media:content url="https://akifmt.github.io/dotnet/2023-08-13-blazor-implementing-google-recaptcha-v2/blazor_dotnet.jpg" medium="image"/></item><item><title>Blazor Implementing Google reCAPTCHA v3</title><link>https://akifmt.github.io/dotnet/2023-08-11-blazor-implementing-google-recaptcha-v3/</link><pubDate>Fri, 11 Aug 2023 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2023-08-11-blazor-implementing-google-recaptcha-v3/</guid><description>Blazor Implementing Google reCAPTCHA v3 Google reCAPTCHA v3 in a Blazor application. Google reCAPTCHA is a service that helps protect websites from spam and abuse by verifying that the user is a human and not a bot. reCAPTCHA v3 is the latest version of this service and provides a seamless user experience without requiring any user interaction.
Site Key: A unique identifier for your website, obtained from the reCAPTCHA admin console.</description><media:content url="https://akifmt.github.io/dotnet/2023-08-11-blazor-implementing-google-recaptcha-v3/blazor_dotnet.jpg" medium="image"/></item><item><title>Blazor Radzen Globalization and Localization</title><link>https://akifmt.github.io/dotnet/2023-08-09-blazor-radzen-globalization-and-localization/</link><pubDate>Wed, 09 Aug 2023 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2023-08-09-blazor-radzen-globalization-and-localization/</guid><description>Blazor Radzen Globalization and Localization The concept of globalization and localization in Blazor, a popular framework for building web applications. We will specifically focus on how to implement globalization and localization using Radzen, a set of UI components for Blazor. We will explore the code provided and understand its functionality.
Globalization: Globalization refers to the process of designing and developing applications that can be adapted to various cultures and languages.</description><media:content url="https://akifmt.github.io/dotnet/2023-08-09-blazor-radzen-globalization-and-localization/blazor_radzen_dotnet.jpg" medium="image"/></item><item><title>Blazor Using NPM Packages</title><link>https://akifmt.github.io/dotnet/2023-08-07-blazor-using-npm-packages/</link><pubDate>Mon, 07 Aug 2023 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2023-08-07-blazor-using-npm-packages/</guid><description>Blazor Using NPM Packages Create a new folder named npm_packages in your Blazor project.
Open the npm_packages folder directory via command prompt and run the following command to initialize NPM in the application:
npm init -y This will create a new package.json file in the npm_packages directory.
Install the webpack and webpack-cli packages as development dependencies by running the following command: npm install webpack webpack-cli --save-dev Modify the scripts section of the package.</description><media:content url="https://akifmt.github.io/dotnet/2023-08-07-blazor-using-npm-packages/blazor_dotnet.jpg" medium="image"/></item><item><title>Blazor Generic Components</title><link>https://akifmt.github.io/dotnet/2023-08-05-blazor-generic-components/</link><pubDate>Sat, 05 Aug 2023 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2023-08-05-blazor-generic-components/</guid><description>Blazor Generic Components We will explore a Blazor generic component that can be used for performing CRUD (Create, Read, Update, Delete) operations on a list of items. This component is designed to provide a reusable and efficient solution for displaying and managing data in a Blazor application.
Blazor: Blazor is a web framework that allows developers to build interactive web UIs using C# instead of JavaScript. It enables full-stack development with .</description><media:content url="https://akifmt.github.io/dotnet/2023-08-05-blazor-generic-components/blazor_dotnet.jpg" medium="image"/></item><item><title>Blazor Expose a Feed as RSS</title><link>https://akifmt.github.io/dotnet/2023-08-02-blazor-rssfeed/</link><pubDate>Wed, 02 Aug 2023 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2023-08-02-blazor-rssfeed/</guid><description>Blazor Expose a Feed as RSS In this example, we will explore how to expose a feed as RSS using C# and the Blazor framework. We will create a controller that generates an RSS feed based on mock data.
RSS (Really Simple Syndication): RSS is a web feed format used to publish frequently updated content, such as blog posts, news headlines, or podcasts. It allows users to subscribe to a website&amp;rsquo;s content and receive updates in a standardized format.</description><media:content url="https://akifmt.github.io/dotnet/2023-08-02-blazor-rssfeed/blazor_dotnet.jpg" medium="image"/></item><item><title>Blazor EF Migrations with Multiple Providers</title><link>https://akifmt.github.io/dotnet/2023-07-31-blazor-ef-multipledbproviders/</link><pubDate>Mon, 31 Jul 2023 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2023-07-31-blazor-ef-multipledbproviders/</guid><description>Blazor Blazor Entity Framework Migrations with Multiple Providers This code demonstrates how to implement multiple database providers in a Blazor application using C#. It allows you to switch between different database providers, such as InMemory, SQLite, and SQL Server, based on the configuration settings.
Database Provider: Refers to the type of database being used, such as InMemory, SQLite, or SQL Server.
Connection String: A string that contains the necessary information to connect to a specific database.</description><media:content url="https://akifmt.github.io/dotnet/2023-07-31-blazor-ef-multipledbproviders/blazor_dotnet.jpg" medium="image"/></item><item><title>Blazor Authentication and Authorization</title><link>https://akifmt.github.io/dotnet/2023-07-30-blazor-authentication-authorization/</link><pubDate>Sun, 30 Jul 2023 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2023-07-30-blazor-authentication-authorization/</guid><description>Blazor Authentication and Authorization This example represents a Blazor application that allows users to view a list of blog posts. The application uses ASP.NET Core and Blazor authentication and authorization to control access to the blog posts.
Before diving into the code, let&amp;rsquo;s understand some key concepts related to Blazor:
Blazor: Blazor is a web framework that allows developers to build interactive web UIs using C# instead of JavaScript. It enables developers to write code that runs on the client-side in the browser using WebAssembly or on the server-side using SignalR.</description><media:content url="https://akifmt.github.io/dotnet/2023-07-30-blazor-authentication-authorization/blazor_dotnet.jpg" medium="image"/></item><item><title>Blazor Radzen CRUD</title><link>https://akifmt.github.io/dotnet/2023-07-26-blazor-radzen-crud/</link><pubDate>Wed, 26 Jul 2023 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2023-07-26-blazor-radzen-crud/</guid><description>Blazor Radzen CRUD In this article, we will explore the code for a Blazor page called &amp;ldquo;BlogPost&amp;rdquo;. This page displays a list of blog posts using a RadzenDataGrid component. We will go through the key concepts, code structure, and code examples to understand how this page works.
Before diving into the code, let&amp;rsquo;s understand some key concepts related to Blazor and RadzenDataGrid:
Blazor: Blazor is a web framework that allows developers to build interactive web UIs using C# instead of JavaScript.</description><media:content url="https://akifmt.github.io/dotnet/2023-07-26-blazor-radzen-crud/blazor_radzen_dotnet.jpg" medium="image"/></item><item><title>Blazor Radzen Search Comp.</title><link>https://akifmt.github.io/dotnet/2023-07-21-blazor-radzen-searchcomponent/</link><pubDate>Fri, 21 Jul 2023 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2023-07-21-blazor-radzen-searchcomponent/</guid><description>Blazor Radzen SearchComponent 1. Blazor Radzen List Page The code provided is a Blazor component that demonstrates how to fetch data from a service and display it in a RadzenDataList component. It also includes a custom search component that allows users to search for specific blog posts.
Blazor: Blazor is a web framework for building interactive client-side web applications using C# instead of JavaScript. It allows developers to write code in C# that runs on the client-side, eliminating the need for JavaScript.</description><media:content url="https://akifmt.github.io/dotnet/2023-07-21-blazor-radzen-searchcomponent/blazor_radzen_searchcomponent.jpg" medium="image"/></item><item><title>Blazor Plyr Video Player</title><link>https://akifmt.github.io/dotnet/2023-07-20-blazor-plyr-video-player/</link><pubDate>Thu, 20 Jul 2023 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2023-07-20-blazor-plyr-video-player/</guid><description>Blazor Plyr Video Player This code provides a video player component in a Blazor application. It allows users to watch videos with controls and captions. The video player is customizable using the Plyr.io library.
Blazor: Blazor is a web framework that allows developers to build interactive web UIs using C# instead of JavaScript. It enables full-stack development with .NET. Plyr.io: Plyr.io is a JavaScript library that provides a customizable video player with a modern UI.</description><media:content url="https://akifmt.github.io/dotnet/2023-07-20-blazor-plyr-video-player/blazor_plyr.png" medium="image"/></item></channel></rss>