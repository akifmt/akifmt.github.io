[{"categories":null,"contents":" Variable NAME=\u0026#34;John\u0026#34; echo $NAME echo \u0026#34;$NAME\u0026#34; echo \u0026#34;${NAME} Condition if [[ -z \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is empty\u0026#34; elif [[ -n \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is not empty\u0026#34; fi ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://akifmt.github.io/notes/bash/basic/","summary":" Variable NAME=\u0026#34;John\u0026#34; echo $NAME echo \u0026#34;$NAME\u0026#34; echo \u0026#34;${NAME} Condition if [[ -z \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is empty\u0026#34; elif [[ -n \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is not empty\u0026#34; fi ","tags":null,"title":"Bash Variables"},{"categories":null,"contents":" Startup.cs No image display bug fix appsettings.json Uploading Image ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://akifmt.github.io/notes/dotnet/gists/","summary":" Startup.cs No image display bug fix appsettings.json Uploading Image ","tags":null,"title":"Dotnet"},{"categories":["IIS","Node.js","Deployment","Release","iisnode"],"contents":"\nNode.js Deployment and Publishing on IIS - iisnode\nTested on Windows Server 2016 x64 and IIS 10.0. All the requirements for different versions are the same, only the appropriate version for iisnode should be installed.\nRequirements:\nWebPlatformInstaller: WebPlatformInstaller IIS URL Rewrite extension: IIS URL Rewrite extension Node.js: node.js iisnode v0.22.1 x64 : iisnode v0.22.1 x64 After installation, the project should have \u0026ldquo;web.config\u0026rdquo;. The following config example can also be used with Express Framework. The app will be started with server.js. Outputs in the console can be checked from the folder specified with logDirectory. The debug sections in the \u0026ldquo;config\u0026rdquo; should be updated when going to the \u0026ldquo;production\u0026rdquo; phase.\n\u0026lt;configuration\u0026gt; \u0026lt;system.webServer\u0026gt; \u0026lt;httpErrors existingResponse=\u0026#34;PassThrough\u0026#34; /\u0026gt; \u0026lt;handlers\u0026gt; \u0026lt;add name=\u0026#34;iisnode\u0026#34; path=\u0026#34;server.js\u0026#34; verb=\u0026#34;*\u0026#34; modules=\u0026#34;iisnode\u0026#34; /\u0026gt; \u0026lt;/handlers\u0026gt; \u0026lt;iisnode node_env=\u0026#34;%node_env%\u0026#34; nodeProcessCountPerApplication=\u0026#34;1\u0026#34; maxConcurrentRequestsPerProcess=\u0026#34;1024\u0026#34; maxNamedPipeConnectionRetry=\u0026#34;100\u0026#34; namedPipeConnectionRetryDelay=\u0026#34;250\u0026#34; maxNamedPipeConnectionPoolSize=\u0026#34;512\u0026#34; maxNamedPipePooledConnectionAge=\u0026#34;30000\u0026#34; asyncCompletionThreadCount=\u0026#34;0\u0026#34; initialRequestBufferSize=\u0026#34;4096\u0026#34; maxRequestBufferSize=\u0026#34;65536\u0026#34; watchedFiles=\u0026#34;*.js;iisnode.yml\u0026#34; uncFileChangesPollingInterval=\u0026#34;5000\u0026#34; gracefulShutdownTimeout=\u0026#34;60000\u0026#34; loggingEnabled=\u0026#34;true\u0026#34; logDirectory=\u0026#34;C:\\Logs\u0026#34; debuggingEnabled=\u0026#34;true\u0026#34; debugHeaderEnabled=\u0026#34;false\u0026#34; debuggerPortRange=\u0026#34;5058-6058\u0026#34; debuggerPathSegment=\u0026#34;debug\u0026#34; maxLogFileSizeInKB=\u0026#34;128\u0026#34; maxTotalLogFileSizeInKB=\u0026#34;1024\u0026#34; maxLogFiles=\u0026#34;20\u0026#34; devErrorsEnabled=\u0026#34;true\u0026#34; flushResponse=\u0026#34;false\u0026#34; enableXFF=\u0026#34;false\u0026#34; promoteServerVars=\u0026#34;\u0026#34; configOverrides=\u0026#34;iisnode.yml\u0026#34; /\u0026gt; \u0026lt;rewrite\u0026gt; \u0026lt;rules\u0026gt; \u0026lt;rule name=\u0026#34;rulename\u0026#34;\u0026gt; \u0026lt;match url=\u0026#34;/*\u0026#34; /\u0026gt; \u0026lt;action type=\u0026#34;Rewrite\u0026#34; url=\u0026#34;server.js\u0026#34; /\u0026gt; \u0026lt;/rule\u0026gt; \u0026lt;/rules\u0026gt; \u0026lt;/rewrite\u0026gt; \u0026lt;/system.webServer\u0026gt; \u0026lt;/configuration\u0026gt; ","date":"August 8, 2019","hero":"/posts/2019-08-08-iisnode.js/blog17_IISNodejs.png","permalink":"https://akifmt.github.io/posts/2019-08-08-iisnode.js/","summary":"Node.js Deployment and Publishing on IIS - iisnode\nTested on Windows Server 2016 x64 and IIS 10.0. All the requirements for different versions are the same, only the appropriate version for iisnode should be installed.\nRequirements:\nWebPlatformInstaller: WebPlatformInstaller IIS URL Rewrite extension: IIS URL Rewrite extension Node.js: node.js iisnode v0.22.1 x64 : iisnode v0.22.1 x64 After installation, the project should have \u0026ldquo;web.config\u0026rdquo;. The following config example can also be used with Express Framework.","tags":["IIS","Node.js","Deployment","Publish","iisnode"],"title":"Node.js Deployment and Publishing on IIS - iisnode"},{"categories":["NodeJS","Different","Versions","Together","Using"],"contents":"\nCombining NodeJS Versions;\n# Setup: npm install -g nvmw # nvmw install nvmw install v8.12.0 # installation of the versions to be used nvmw use v8.12.0 # Use the specific version # Use: nvmw help # help nvmw install [version] # Version install [version] nvmw uninstall [version] # Uninstall version [version] nvmw use [version] # Change version [version] nvmw ls # List of installed versions NodeJS Releases List: Versions\nNPM: NPM Link\nGithub: Github Link\n","date":"February 10, 2019","hero":"/posts/2019-02-10-nodejsfarklisurumleribiraradakullanma/blog16_NodeJSFarkliSurumleriBiraradaKullanma.png","permalink":"https://akifmt.github.io/posts/2019-02-10-nodejsfarklisurumleribiraradakullanma/","summary":"Combining NodeJS Versions;\n# Setup: npm install -g nvmw # nvmw install nvmw install v8.12.0 # installation of the versions to be used nvmw use v8.12.0 # Use the specific version # Use: nvmw help # help nvmw install [version] # Version install [version] nvmw uninstall [version] # Uninstall version [version] nvmw use [version] # Change version [version] nvmw ls # List of installed versions NodeJS Releases List: Versions","tags":["NodeJS","Different","Versions","Together","Using"],"title":"Combining NodeJS Versions"},{"categories":["Google","Cloud","Ubuntu",16.04,"VNC","Server"],"contents":"\nVNC Server on Google Cloud Ubuntu 16.04;\n# Updates: sudo apt-get update sudo apt-get upgrade # Setup: sudo apt install xfce4 xfce4-goodies tightvncserver vncserver vncserver -kill :1 mv ~/.vnc/xstartup ~/.vnc/xstartup.bak nano ~/.vnc/xstartup xstartup content: #!/bin/bash xrdb $HOME/.Xresources startxfce4 \u0026amp; sudo chmod +x ~/.vnc/xstartup vncserver To connect via Windows: Download link\n","date":"September 21, 2017","hero":"/posts/2017-09-21-googlecloudubuntuvnc/blog15_GoogleCloudUbuntuVNC.jpg","permalink":"https://akifmt.github.io/posts/2017-09-21-googlecloudubuntuvnc/","summary":"VNC Server on Google Cloud Ubuntu 16.04;\n# Updates: sudo apt-get update sudo apt-get upgrade # Setup: sudo apt install xfce4 xfce4-goodies tightvncserver vncserver vncserver -kill :1 mv ~/.vnc/xstartup ~/.vnc/xstartup.bak nano ~/.vnc/xstartup xstartup content: #!/bin/bash xrdb $HOME/.Xresources startxfce4 \u0026amp; sudo chmod +x ~/.vnc/xstartup vncserver To connect via Windows: Download link","tags":["Google","Cloud","Ubuntu",16.04,"VNC","Server"],"title":"VNC Server on Google Cloud Ubuntu"},{"categories":["Torch","OpenCV Installation and Testing"],"contents":"\nOpenCV and Torch installation on Ubuntu 16.04;\n# Updates: sudo apt-get update sudo apt-get upgrade shutdown -r 0 sudo apt-get install git #Torch Installation #Run in terminal in order: git clone https://github.com/torch/distro.git ~/torch --recursive cd ~/torch; bash install-deps; ./install.sh source ~/.bashrc source ~/.profile #OpenCV Installation: sudo apt-get install cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev 2015-12-21 VERSION 3.1 OpenCV for Linux/Mac cd ~ wget https://github.com/Itseez/opencv/archive/3.1.0.zip --no-check-certificate unzip 3.1.0.zip cd opencv-3.1.0 mkdir build cd build cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_TBB=ON -D BUILD_NEW_PYTHON_SUPPORT=ON -D WITH_V4L=ON -D INSTALL_C_EXAMPLES=ON -D INSTALL_PYTHON_EXAMPLES=ON -D BUILD_EXAMPLES=ON -D WITH_QT=ON -D WITH_GTK=ON -D WITH_OPENGL=ON .. make sudo make install While in the openCV build folder; source ~/.profile luarocks install cv luarocks install camera luarocks install ffmpeg /// If a luarocks package installation error occurs, run the following line to fix it and install the packages again: /// sudo rm -rf ~/.cache/luarocks IDE: Download link\nKurulumu Test etmek i√ßin: Download link , Github link\n","date":"May 27, 2017","hero":"/posts/2017-05-27-torchveopencvkurulum/blog14_torchVeopenCVKurulum.png","permalink":"https://akifmt.github.io/posts/2017-05-27-torchveopencvkurulum/","summary":"OpenCV and Torch installation on Ubuntu 16.04;\n# Updates: sudo apt-get update sudo apt-get upgrade shutdown -r 0 sudo apt-get install git #Torch Installation #Run in terminal in order: git clone https://github.com/torch/distro.git ~/torch --recursive cd ~/torch; bash install-deps; ./install.sh source ~/.bashrc source ~/.profile #OpenCV Installation: sudo apt-get install cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev 2015-12-21 VERSION 3.1 OpenCV for Linux/Mac cd ~ wget https://github.com/Itseez/opencv/archive/3.1.0.zip --no-check-certificate unzip 3.1.0.zip cd opencv-3.","tags":["Torch","OpenCV Installation and Testing"],"title":"Torch, OpenCV Installation and Test"},{"categories":["epub calibre"],"contents":"\nThe cover pages of some e-books do not appear on other devices due to incompatibility. The solution for this is caliber. It provides the opportunity to edit not only the cover page but also the content. Download link\nTo edit the cover page; It will be enough to edit the following line with the \u0026ldquo;Edit Metadata\u0026rdquo; option or add it if it does not exist.\n\u0026lt;item id=\u0026#34;cover_image\u0026#34; href=\u0026#34;cover.jpg\u0026#34; media-type=\u0026#34;image/jpeg\u0026#34;\u0026gt; ","date":"May 2, 2017","hero":"/posts/2017-05-02-epubcover/blog13_epub.png","permalink":"https://akifmt.github.io/posts/2017-05-02-epubcover/","summary":"\nThe cover pages of some e-books do not appear on other devices due to incompatibility. The solution for this is caliber. It provides the opportunity to edit not only the cover page but also the content. Download link\nTo edit the cover page; It will be enough to edit the following line with the \u0026ldquo;Edit Metadata\u0026rdquo; option or add it if it does not exist.\n\u0026lt;item id=\u0026#34;cover_image\u0026#34; href=\u0026#34;cover.jpg\u0026#34; media-type=\u0026#34;image/jpeg\u0026#34;\u0026gt; ","tags":["epub calibre"],"title":"Edit EPub Cover"},{"categories":["Game Theory","Prisoner Dilemma","Nash Equilibrium"],"contents":"\nGet two people caught. If one testifies against the other and the other remains silent, the witness will be released, and the party who chooses to remain silent will be sentenced to 20 years in prison. If both remain silent, they will be sentenced to 1 year each. If both testify against each other, they will each be sentenced to 5 years.\nThe optimal option of the two is to keep both silent. The player, who is unaware of the other party\u0026rsquo;s decision, will not remain silent and will testify against the other party, not risking the possibility of serving 20 years in prison. By testifying against the other party, he will consent to a shorter prison sentence of 5 years or be released. Here the player will aim at minimizing his loss (maximizing his win). It will be inevitable that the other party will testify by acting rationally under the same conditions.\nThe sole aim of the players is to maximize their own winnings, independently of the other player. Here, the Nash Equilibrium is formed when two individuals act by considering the other\u0026rsquo;s movement and choose the best for their own situation instead of maximum gain.\n","date":"March 16, 2017","hero":"/posts/2017-03-16-prisonersdilemmavenashdengesi/blog11_prisoners-dilemma-kural-tablosu.jpg","permalink":"https://akifmt.github.io/posts/2017-03-16-prisonersdilemmavenashdengesi/","summary":"Get two people caught. If one testifies against the other and the other remains silent, the witness will be released, and the party who chooses to remain silent will be sentenced to 20 years in prison. If both remain silent, they will be sentenced to 1 year each. If both testify against each other, they will each be sentenced to 5 years.\nThe optimal option of the two is to keep both silent.","tags":["Game Theory","Prisoner Dilemma","Nash Equilibrium"],"title":"Game Theory - Prisoner's Dilemma and Nash Equilibrium"},{"categories":["shields.io"],"contents":"\nA tool for the ReadMe files of projects to display the project status in a nicer way. shields.io supports many tools used for project tracking. Travis, Jenkins and even Github allow badges to be added up to the release status of the project on SourceForce.\n","date":"March 16, 2017","hero":"/posts/2017-03-19-shields.io/blog12_shields.io.png","permalink":"https://akifmt.github.io/posts/2017-03-19-shields.io/","summary":"A tool for the ReadMe files of projects to display the project status in a nicer way. shields.io supports many tools used for project tracking. Travis, Jenkins and even Github allow badges to be added up to the release status of the project on SourceForce.","tags":["shields.io"],"title":"shields.io"},{"categories":["bash"],"contents":"\nActive folder: pwd Appearance: ls \u0026#39;Detailed View Parameters: -l *detailed* -lrt *detailed* -d *folder* -r *read* -w *write* -x *execute*\u0026#39; Active Folder Change: cd \u0026lt;folder name\u0026gt; File Creation: touch \u0026lt;filename\u0026gt; Displayed: ctrl+k \u0026#39;delete to the right\u0026#39; echo \u0026#34;hello world\u0026#34; echo \u0026#34;hello coders\u0026#34; \u0026gt; filename \u0026#39;Send output to file\u0026#39; echo $? \u0026#39;Returns the result of the last operation (0 successful)\u0026#39; cat filename \u0026#39;prints file contents\u0026#39; more filename \u0026#39;prints file contents\u0026#39; less filename \u0026#39;prints file contents\u0026#39; nano filename \u0026#39;opens with nano text editor\u0026#39; vim filename \u0026#39;opens with vim text editor\u0026#39; head -n 5 output-1.txt \u0026#39;show first 5 lines\u0026#39; tail -n 5 output-1.txt \u0026#39;show last 5 lines\u0026#39; tail -f log-file.txt \u0026#39;prints the last lines and follows the new incoming lines\u0026#39; Creating Folder: mkdir foldername \u0026#39;Creates folder\u0026#39; Run by Sending or Receiving Content: ./prog \u0026lt; input-1.txt \u0026#39;Executes the content of input-1 by sending it to the prog.\u0026#39; ./my-prog \u0026lt; input-1.txt \u0026gt; output-1.txt \u0026#39;assigns output to output\u0026#39; ./my-prog 12 2\u0026gt; output-1.txt \u0026#39;redirects input from stderr to output\u0026#39; ./my-prog \u0026lt; input-1.txt \u0026gt; all-output.txt 2\u0026gt;\u0026amp;1 \u0026#39;stderr, redirect to stdoutput\u0026#39; echo \u0026#34;asdasd\u0026#34; \u0026gt;\u0026gt; log-file.txt \u0026#39;add to end of file\u0026#39; Compilation: gcc -o my-prog my-prog.c \u0026#39;compiles with gcc.\u0026#39; Search in Process: ps aux | grep my-prog \u0026#39;do not search among running processes\u0026#39; Process Operations: \u0026#39;All processes start with: 0:stdinput 1:stdoutput 2:stderror\u0026#39; \u0026#39;The system proc folder where processes are kept.\u0026#39; \u0026#39; ctrl+c : interrupt (sigint) (sigterm) (sighup) -\u0026gt; updates the configuration (sigkill) -\u0026gt; kills without question ctrl+l : clear terminal does the action ctrl+d : (end of stream) kills the active process running \u0026#39; kill -l\t\u0026#39;shows list of signals for kill\u0026#39; kill -INT 12334\t\u0026#39;sends sigint signal\u0026#39; kill -TERM 12334\t\u0026#39;kills with sigterm signal\u0026#39; cat cmdline \u0026#39;running location\u0026#39; cat environ \u0026#39;process in environment variables\u0026#39; cat limits \u0026#39;process limits\u0026#39; top \u0026#39;shows transactions momentarily\u0026#39; htop \u0026#39;shows by updating\u0026#39; Path Operations: echo $PATH\t\u0026#39;path content\u0026#39; export PATH=$PATH:/home/vm/deneme\t\u0026#39;add new directory to end of path\u0026#39; Device Transactions: ls /dev \u0026#39;shows all devices\u0026#39; ls -lrt /dev/null \u0026#39;sends output to null\u0026#39; Data transfer: curl http://akifmt.github.io \u0026#39;downloads\u0026#39; curl http://akifmt.github.io \u0026gt; /dev/null \u0026#39;downloads results to null\u0026#39; curl -s http://akifmt.github.io \u0026gt; /dev/null\t\u0026#39;downloads in silent mode, sends results to null\u0026#39; curl http://akifmt.github.io \u0026gt; /dev/null 2\u0026gt;\u0026amp;1\t\u0026#39;forward also incoming from stderr\u0026#39; curl -s https://demo.consul.io/v1/catalog/services \u0026#39;download in silent mode\u0026#39; curl -s https://demo.consul.io/v1/catalog/service/web?pretty \u0026#39;downloads in silent mode\u0026#39; curl -s https://demo.consul.io/v1/catalog/service/web?pretty | grep Address \u0026#39;downloads in silent mode, finds Address lines\u0026#39; curl -s https://demo.consul.io/v1/catalog/service/web?pretty | jq \u0026#39;.[0].Address\u0026#39; \u0026#39;Retrieves the first of the address part\u0026#39; curl -s https://demo.consul.io/v1/catalog/service/web?pretty | jq -r \u0026#39;.[].Address\u0026#39; \u0026#39;Retrieves all Address parts\u0026#39; curl -s https://demo.consul.io/v1/catalog/service/web?pretty | jq -r \u0026#39;.[].Address\u0026#39; | while read serverAddr; do curl -s $serverAddr \u0026gt; $serverAddr.txt; done \u0026#39;Finds all Address lines, sends them to the right, creates a file based on the Address names\u0026#39; File Operations: echo \u0026#34;asd,qwe,qwwww\u0026#34; | cut -d, -f2 \u0026#39;takes the 2nd word after\u0026#39; echo \u0026#34;asd;qwe;qwwww\u0026#34; | cut -d\\; -f2 \u0026#39;; takes the 2nd word after\u0026#39; echo \u0026#34;asd,qwe,qwwww\u0026#34; | awk -F, \u0026#39;{print $2}\u0026#39; \u0026#39;takes the 2nd word after\u0026#39; ls -lrt | awk \u0026#39;{print $9}\u0026#39; \u0026#39;9. print columns\u0026#39; ls -lrt | cat \u0026#39;pipe outputs to the right one\u0026#39; wc -l \u0026#39;line counts\u0026#39; ls -lrt | wc -l \u0026#39;sends results from ls to the right and counts lines\u0026#39; find . -name my-prog \u0026#39;finds names starting with my-prog\u0026#39; find . -type f \u0026#39;finds files\u0026#39; find . -name \u0026#34;*.txt\u0026#34; \u0026#39;finds txt extension\u0026#39; find -name \u0026#34;*.txt\u0026#34; | while read filename; do echo $filename; done \u0026#39;finds txt, sends it to the server, prints it as filename\u0026#39; find -name \u0026#34;*.txt\u0026#34; | while read filename; do rm $filename; done \u0026#39;delete files found\u0026#39; dd if=/dev/zero of=zero-file.txt bs=512 count=2 \u0026#39;Creates 2x512KB empty file. \u0026#39; hexdump zero-file.txt \u0026#39;Displays in hex and abbreviated repetitive parts.\u0026#39; hexdump -v zero-file.txt \u0026#39;shows all without abbreviations\u0026#39; dd if=/dev/urandom of=random-file.txt bs=512 count=4 \u0026#39;creates 4x512KB file with random value\u0026#39; Operations on CPU: dd if=/dev/zero of=null \u0026#39;generates zero to send null to device (uncontrolled cpu load)\u0026#39; stress-ng -c 1 -l 40 \u0026#39;40% load on 1 CPU\u0026#39; stress-ng -c 0 -l 40 \u0026#39;loads 40% on all CPUs\u0026#39; Network Transactions: ifconfig \u0026#39;shows network devices and connections\u0026#39; route -n \u0026#39;shows all access\u0026#39; sudo wondershaper ens33 512 512 \u0026#39;Limits downloading and sending 512Kpbs\u0026#39; sudo wondershaper ens33 clear \u0026#39;removes limits\u0026#39; Satƒ±r Sonlarƒ± (lineending): OS Desc Code Linux LF (line feed) (\\n) Unix CR (carriage return) (\\r) Windows CRLF (carriage return line feed) \\r\\n ","date":"February 24, 2017","hero":"/posts/2017-02-24-linuxbashkomutlari/blog10_bash.png","permalink":"https://akifmt.github.io/posts/2017-02-24-linuxbashkomutlari/","summary":"Active folder: pwd Appearance: ls \u0026#39;Detailed View Parameters: -l *detailed* -lrt *detailed* -d *folder* -r *read* -w *write* -x *execute*\u0026#39; Active Folder Change: cd \u0026lt;folder name\u0026gt; File Creation: touch \u0026lt;filename\u0026gt; Displayed: ctrl+k \u0026#39;delete to the right\u0026#39; echo \u0026#34;hello world\u0026#34; echo \u0026#34;hello coders\u0026#34; \u0026gt; filename \u0026#39;Send output to file\u0026#39; echo $? \u0026#39;Returns the result of the last operation (0 successful)\u0026#39; cat filename \u0026#39;prints file contents\u0026#39; more filename \u0026#39;prints file contents\u0026#39; less filename \u0026#39;prints file contents\u0026#39; nano filename \u0026#39;opens with nano text editor\u0026#39; vim filename \u0026#39;opens with vim text editor\u0026#39; head -n 5 output-1.","tags":["bash"],"title":"Linux Bash Commands"},{"categories":["vmware hyper v"],"contents":"\nTo turn off Hyper-V; As administrator on cmd: bcdedit /set hypervisorlaunchtype off vmware available after reboot.\nTo turn Hyper-V back on As administrator on cmd: bcdedit /set hypervisorlaunchtype auto Hyper-V is available upon reboot.\n","date":"February 22, 2017","hero":"/posts/2017-02-22-hypervmwarebirlikte/blog9_vmwarehyperv.png","permalink":"https://akifmt.github.io/posts/2017-02-22-hypervmwarebirlikte/","summary":"To turn off Hyper-V; As administrator on cmd: bcdedit /set hypervisorlaunchtype off vmware available after reboot.\nTo turn Hyper-V back on As administrator on cmd: bcdedit /set hypervisorlaunchtype auto Hyper-V is available upon reboot.","tags":["vmware hyper v"],"title":"VMware and Hyper-V Combine"},{"categories":["Agile"],"contents":"\nAgile Methodology is a practice-based method for modeling and documenting software systems effectively and efficiently.\nSoftware projects are faced with the danger of failure due to improper use of resources, wrong prioritization and inaccurate understanding of customer demands throughout their lifecycle. According to The Standish Group\u0026rsquo;s 2009 Chaos Report, software projects fail at a rate of 68% worldwide. This has led large companies in Europe and America to try various methods to produce projects with higher productivity, and most companies have adopted Agile software development approaches, which they find most successful in management and practice.\nIncreasing when Agile approaches are applied;\nproject productivity, the ability of the project to adapt quickly to changes, project quality and speed to market of the project In line with this, the success rates of the projects have been increased to 80% and project profitability has been increased with the significant competitive advantage obtained.\nSource: www.acm-software.com/agile\n","date":"February 20, 2017","hero":"/posts/2017-02-20-agile/blog8_agile.jpg","permalink":"https://akifmt.github.io/posts/2017-02-20-agile/","summary":"Agile Methodology is a practice-based method for modeling and documenting software systems effectively and efficiently.\nSoftware projects are faced with the danger of failure due to improper use of resources, wrong prioritization and inaccurate understanding of customer demands throughout their lifecycle. According to The Standish Group\u0026rsquo;s 2009 Chaos Report, software projects fail at a rate of 68% worldwide. This has led large companies in Europe and America to try various methods to produce projects with higher productivity, and most companies have adopted Agile software development approaches, which they find most successful in management and practice.","tags":["Agile"],"title":"Agile"},{"categories":["Docker"],"contents":"What is Docker Docker is an open source project that deploy application. It works like a virtual machine, but better. Using a linux instance, it isolates itself from OS and works more secure. Docker defines itself like that on official website;\nDocker containers wrap a piece of software in a complete filesystem that contains everything needed to run: code, runtime, system tools, system libraries ‚Äì anything that can be installed on a server. This guarantees that the software will always run the same, regardless of its environment.\nFor more information, www.docker.com\n","date":"November 24, 2016","hero":"/posts/2016-11-24-docker/blog7_docker.png","permalink":"https://akifmt.github.io/posts/2016-11-24-docker/","summary":"What is Docker Docker is an open source project that deploy application. It works like a virtual machine, but better. Using a linux instance, it isolates itself from OS and works more secure. Docker defines itself like that on official website;\nDocker containers wrap a piece of software in a complete filesystem that contains everything needed to run: code, runtime, system tools, system libraries ‚Äì anything that can be installed on a server.","tags":["Docker"],"title":"What is Docker?"},{"categories":["Android 7 Nougat"],"contents":"\nNew features\nMulti-window / running two apps on the same screen (The most important feature) New notification center Revamped settings menu Notifications settings have been enriched. We will now be able to prevent every notification from appearing. Added the ability to go to the relevant menu of the settings by long pressing the icons in the notification Refreshing battery graph ","date":"November 2, 2016","hero":"/posts/2016-11-02-android7nougat/blog6_android7n_teaser.png","permalink":"https://akifmt.github.io/posts/2016-11-02-android7nougat/","summary":"\nNew features\nMulti-window / running two apps on the same screen (The most important feature) New notification center Revamped settings menu Notifications settings have been enriched. We will now be able to prevent every notification from appearing. Added the ability to go to the relevant menu of the settings by long pressing the icons in the notification Refreshing battery graph ","tags":["Android 7 Nougat"],"title":"Android 7 Nougat"},{"categories":["monte carlo metodu"],"contents":"\nNedir: Rastgele sayƒ±lar kullanƒ±larak sistemlerin modellenmesinde kullanƒ±labilir. Sistemin kesin sonucunun olduƒüu bazƒ± durumlarda, veya olmadƒ±ƒüƒ± t√ºm durumlarda uygulanabilir. √ñrnek sayƒ±sƒ± doƒüru sonu√ßlar elde etmede b√ºy√ºk √∂nem ta≈üƒ±maktadƒ±r. Pi sayƒ±sƒ± hesaplama, yazƒ± tura ve zar hesaplamasƒ± √∂rnek g√∂sterilebilir.\n√ñrnek: C ile Yazƒ±-Tura double rastgele(){ double r = (double) rand()/RAND_MAX; return r; } int main() { int i, tura, yazi, n; double r, p; printf(\u0026#34;deney sayisini girin: \u0026#34;); scanf(\u0026#34;%d\u0026#34;,\u0026amp;n); srand( time(NULL) ); for(tura=0, i=1; i\u0026lt;=n; i++){ r = rastgele(); if(r\u0026lt;0.5) tura++; } p = (double) tura/n; yazi = n-tura; printf(\u0026#34;tura sayisi: %d\\n\u0026#34;,tura); printf(\u0026#34;yazi sayisi: %d\\n\u0026#34;,yazi); printf(\u0026#34;Olasiliklar: %lf %lf\\n\u0026#34;,p, 1.0-p); return 0; } ","date":"October 9, 2016","hero":"/posts/2016-10-09-montecarlometodu/blog5_montecarlometodu.png","permalink":"https://akifmt.github.io/posts/2016-10-09-montecarlometodu/","summary":"Nedir: Rastgele sayƒ±lar kullanƒ±larak sistemlerin modellenmesinde kullanƒ±labilir. Sistemin kesin sonucunun olduƒüu bazƒ± durumlarda, veya olmadƒ±ƒüƒ± t√ºm durumlarda uygulanabilir. √ñrnek sayƒ±sƒ± doƒüru sonu√ßlar elde etmede b√ºy√ºk √∂nem ta≈üƒ±maktadƒ±r. Pi sayƒ±sƒ± hesaplama, yazƒ± tura ve zar hesaplamasƒ± √∂rnek g√∂sterilebilir.\n√ñrnek: C ile Yazƒ±-Tura double rastgele(){ double r = (double) rand()/RAND_MAX; return r; } int main() { int i, tura, yazi, n; double r, p; printf(\u0026#34;deney sayisini girin: \u0026#34;); scanf(\u0026#34;%d\u0026#34;,\u0026amp;n); srand( time(NULL) ); for(tura=0, i=1; i\u0026lt;=n; i++){ r = rastgele(); if(r\u0026lt;0.","tags":["monte carlo metodu"],"title":"Monte Carlo Method"},{"categories":["Raspberry Pi","Remote Desktop Connection"],"contents":"\nProblem: Raspbery Pi Remote Connection TR Keyboard Not Recognizing Solution: missing km-041f.ini file\nCopy the km-041f.ini file to the /etc/xrdp/ directory on the Raspberry Pi. When xrdp is restarted, TR characters are no longer a problem.\nThe thing to note is that you must access the directory as root.\nThe step I followed; sudo pcmanfm on RasPi Copy the km-041f.ini file to /etc/xrdp/.\nsudo service xrdp restart\nNote: For those who have problems finding the file on the net, I downloaded it from this repo: Link ","date":"September 18, 2016","hero":"/posts/2016-09-18-raspberrypiilerdcbaglantisi/blog4_rasPiRDC.png","permalink":"https://akifmt.github.io/posts/2016-09-18-raspberrypiilerdcbaglantisi/","summary":"\nProblem: Raspbery Pi Remote Connection TR Keyboard Not Recognizing Solution: missing km-041f.ini file\nCopy the km-041f.ini file to the /etc/xrdp/ directory on the Raspberry Pi. When xrdp is restarted, TR characters are no longer a problem.\nThe thing to note is that you must access the directory as root.\nThe step I followed; sudo pcmanfm on RasPi Copy the km-041f.ini file to /etc/xrdp/.\nsudo service xrdp restart\nNote: For those who have problems finding the file on the net, I downloaded it from this repo: Link ","tags":["Raspberry Pi","Remote Desktop Connection"],"title":"Raspberry Pi Remote Desktop Turkish Keyboard Problem"},{"categories":["remote desktop","amazon aws","microsoft azure"],"contents":"\nSince VPS devices on AWS or Azure do not have a real sound card, it is not possible to receive sound on these devices. The solution for this is VA, that is, virtual audio. Our convenient application solution is solved with VAC installation. The application creates a virtual sound driver and directs the sound to our device.\nProblem: Voice over VPS Solution: Virtual Audio Cable 4.15 installation and Setup\nInstall \u0026ldquo;Virtual Audio Cable 4.15\u0026rdquo; that I tested on VPS.\nRDP-Tcp -\u0026gt; client services -\u0026gt; audio in \u0026ldquo;tsconfig.msc\u0026rdquo; on VPS remove the option. Reset VPS.\nAfter this step, the sound is ready.\nDownload link:\nGoogle -\u0026gt; Virtual Audio Cable 4.15 ","date":"August 22, 2016","hero":"/posts/2016-08-22-rdcileawsveazurevpsuzerindevacileses/blog3_vac_teaser.png","permalink":"https://akifmt.github.io/posts/2016-08-22-rdcileawsveazurevpsuzerindevacileses/","summary":"Since VPS devices on AWS or Azure do not have a real sound card, it is not possible to receive sound on these devices. The solution for this is VA, that is, virtual audio. Our convenient application solution is solved with VAC installation. The application creates a virtual sound driver and directs the sound to our device.\nProblem: Voice over VPS Solution: Virtual Audio Cable 4.15 installation and Setup","tags":["remote desktop","amazon aws","microsoft azure"],"title":"Application Sounds on Amazon AWS and Azure with Remote Desktop"},{"categories":["INVICTUS"],"contents":"\nThe company works on cyber security and security training. I also contacted my friend\u0026rsquo;s reference. The sincerity I saw from day one surprised me. I saw a full family relationship in the company, from management to employees. With the experienced team, they included them at every point by providing training on cyber security at a high-level security level, starting from scratch. The company is experienced in cyber security and even works towards becoming a world brand. The training activities of the company in cyber security are also successful enough to be called the first in their field. Thank you to everyone from the company\u0026rsquo;s management to its employees. I would suggest those interested in cyber security to follow the link. Company information is below.\nwww.invictuseurope.com Contact: www.invictuseurope.com/iletisim Education: egitim.invictuseurope.com\n","date":"August 3, 2016","hero":"/posts/2016-08-03-invictusbilisimguvenlikstajyapmak/blog2_invictus_teaser.png","permalink":"https://akifmt.github.io/posts/2016-08-03-invictusbilisimguvenlikstajyapmak/","summary":"The company works on cyber security and security training. I also contacted my friend\u0026rsquo;s reference. The sincerity I saw from day one surprised me. I saw a full family relationship in the company, from management to employees. With the experienced team, they included them at every point by providing training on cyber security at a high-level security level, starting from scratch. The company is experienced in cyber security and even works towards becoming a world brand.","tags":["INVICTUS"],"title":"INVICTUS, Internship in IT Security"},{"categories":["pokemon go","what is it"],"contents":"A game that can be played on mobile platforms. The biggest innovation and feature is virtualized reality technology. Using real location information, it provides a better player experience, catching 722 Pokemon characters, trades and battles. The official introduction is as follows:\n","date":"July 10, 2016","hero":"/posts/2016-07-10-pokemongooynamak/blog1_pokemon_go_logo.png","permalink":"https://akifmt.github.io/posts/2016-07-10-pokemongooynamak/","summary":"A game that can be played on mobile platforms. The biggest innovation and feature is virtualized reality technology. Using real location information, it provides a better player experience, catching 722 Pokemon characters, trades and battles. The official introduction is as follows:","tags":["pokemon go","what is it"],"title":"Playing Pokemon GO!"},{"categories":null,"contents":"Abstraction: Abstraction is an emphasis on the idea, qualities and properties rather than the particulars (a suppression of detail). The importance of abstraction is derived from its ability to hide irrelevant details and from the use of names to reference objects. Abstraction is essential in the construction of programs. It places the emphasis on what an object is or does rather than how it is represented or how it works. Thus, it is the primary means of managing complexity in large programs.\nGeneralization: Generalization is the broadening of application to encompass a larger domain of objects of the same or different type. Programming languages provide generalization through variables, parameterization, generics and polymorphism. It places the emphasis on the similarities between objects. Thus, it helps to manage complexity by collecting individuals into groups and providing a representative which can be used to specify any individual of the group.\nAbstraction and generalization are often used together. Abstracts are generalized through parameterization to provide greater utility. In parameterization, one or more parts of an entity are replaced with a name which is new to the entity. The name is used as a parameter. When the parameterized abstract is invoked, it is invoked with a binding of the parameter to an argument.\n","date":"January 1, 2016","hero":"/images/posts/default-hero.jpg","permalink":"https://akifmt.github.io/programming/05-programming05/","summary":"Abstraction: Abstraction is an emphasis on the idea, qualities and properties rather than the particulars (a suppression of detail). The importance of abstraction is derived from its ability to hide irrelevant details and from the use of names to reference objects. Abstraction is essential in the construction of programs. It places the emphasis on what an object is or does rather than how it is represented or how it works. Thus, it is the primary means of managing complexity in large programs.","tags":["Abstraction","Generalization"],"title":"Abstraction and Generalization"},{"categories":null,"contents":"Association: A relationship where all objects have their own lifecycle and there is no owner. Aggregation: A specialised form of Association where all objects have their own lifecycle, but there is ownership and child objects can not belong to another parent object. Composition: A specialised form of Aggregation and we can call this as a ‚Äúdeath‚Äù relationship. It is a strong type of Aggregation. Child object does not have its lifecycle and if parent object is deleted, all child objects will also be deleted. ","date":"January 1, 2016","hero":"/images/posts/default-hero.jpg","permalink":"https://akifmt.github.io/programming/04-programming04/","summary":"Association: A relationship where all objects have their own lifecycle and there is no owner. Aggregation: A specialised form of Association where all objects have their own lifecycle, but there is ownership and child objects can not belong to another parent object. Composition: A specialised form of Aggregation and we can call this as a ‚Äúdeath‚Äù relationship. It is a strong type of Aggregation. Child object does not have its lifecycle and if parent object is deleted, all child objects will also be deleted.","tags":["encapsulation"],"title":"Association, Aggregation, Composition"},{"categories":null,"contents":"According to Object Oriented Design Principles, there are five principles when design a class.\nSRP (The Single Responsibility Principle) A class should have one, and only one, reason to change. OCP (The Open Closed Principle) Should be able to extend any classes\u0026rsquo; behaviors, without modifying the classes.. LSP (The Liskov Substitution Principle) Derived classes must be substitutable for their base classes. DIP (The Dependency Inversion Principle) Depend on abstractions, not on concretions. ISP (The Interface Segregation Principle) Make fine grained interfaces that are client specific. ","date":"January 1, 2016","hero":"/images/posts/default-hero.jpg","permalink":"https://akifmt.github.io/programming/02-programming02oop/","summary":"According to Object Oriented Design Principles, there are five principles when design a class.\nSRP (The Single Responsibility Principle) A class should have one, and only one, reason to change. OCP (The Open Closed Principle) Should be able to extend any classes\u0026rsquo; behaviors, without modifying the classes.. LSP (The Liskov Substitution Principle) Derived classes must be substitutable for their base classes. DIP (The Dependency Inversion Principle) Depend on abstractions, not on concretions.","tags":["identify and design a class"],"title":"How to identify and design a Class?"},{"categories":null,"contents":"A programming language is a formal computer language designed to communicate instructions to a machine, particularly a computer. Programming languages can be used to create programs to control the behavior of a machine or to express algorithms. (Source: wikipedia)\n","date":"January 1, 2016","hero":"/images/posts/default-hero.jpg","permalink":"https://akifmt.github.io/programming/00-intro/","summary":"A programming language is a formal computer language designed to communicate instructions to a machine, particularly a computer. Programming languages can be used to create programs to control the behavior of a machine or to express algorithms. (Source: wikipedia)","tags":["Programming intro"],"title":"Programming"},{"categories":null,"contents":"The encapsulation is the inclusion-within a program object-of all the resources needed for the object to function, basically, the methods and the data. In OOP the encapsulation is mainly achieved by creating classes, the classes expose public methods and properties. A class is kind of a container or capsule or a cell, which encapsulate a set of methods, attribute and properties to provide its indented functionalities to other classes. In that sense, encapsulation also allows a class to change its internal implementation without hurting the overall functioning of the system. That idea of encapsulation is to hide how a class does its business, while allowing other classes to make requests of it.\nIn order to modularize/ define the functionality of a one class, that class can uses functions or properties exposed by another class in many different ways. According to Object Oriented Programming there are several techniques classes can use to link with each other. Those techniques are named association, aggregation, and composition.\n","date":"January 1, 2016","hero":"/images/posts/default-hero.jpg","permalink":"https://akifmt.github.io/programming/03-programming03encapsulation/","summary":"The encapsulation is the inclusion-within a program object-of all the resources needed for the object to function, basically, the methods and the data. In OOP the encapsulation is mainly achieved by creating classes, the classes expose public methods and properties. A class is kind of a container or capsule or a cell, which encapsulate a set of methods, attribute and properties to provide its indented functionalities to other classes. In that sense, encapsulation also allows a class to change its internal implementation without hurting the overall functioning of the system.","tags":["encapsulation"],"title":"What is Encapsulation (or Information Hiding)?"},{"categories":null,"contents":"Object Oriented Programming(OOP) is a programming paradigm based on the concept of objects, which may contain data, in the form of fields, often known as attributes; and code, in the form of procedures, often known as methods.\nEncapsulation Abstraction Inheritance Polymorphism ","date":"January 1, 2016","hero":"/images/posts/default-hero.jpg","permalink":"https://akifmt.github.io/programming/01-programming01oop/","summary":"Object Oriented Programming(OOP) is a programming paradigm based on the concept of objects, which may contain data, in the form of fields, often known as attributes; and code, in the form of procedures, often known as methods.\nEncapsulation Abstraction Inheritance Polymorphism ","tags":["OOP"],"title":"What is OOP?"},{"categories":null,"contents":"Table of contents Table of contents Text Code Python C/C++ Bash Tables Text Some example text\nCode Python def foo(): print (\u0026#34;This is a python function\u0026#34;) C/C++ void foo(){ prinf(\u0026#34;%s\\n\u0026#34;, \u0026#34;This is a C function\u0026#34;) } Bash # This is a bash command cd dir \u0026amp;\u0026amp; echo $PWD; # Return exit 0; Tables Pages Elements 1 Text 2 Code 3 Tables ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://akifmt.github.io/projects/project1/","summary":"Table of contents Table of contents Text Code Python C/C++ Bash Tables Text Some example text\nCode Python def foo(): print (\u0026#34;This is a python function\u0026#34;) C/C++ void foo(){ prinf(\u0026#34;%s\\n\u0026#34;, \u0026#34;This is a C function\u0026#34;) } Bash # This is a bash command cd dir \u0026amp;\u0026amp; echo $PWD; # Return exit 0; Tables Pages Elements 1 Text 2 Code 3 Tables ","tags":null,"title":"project1en"},{"categories":null,"contents":"Table of contents Table of contents Text Code Python C/C++ Bash Tables Text Some example text\nCode Python def foo(): print (\u0026#34;This is a python function\u0026#34;) C/C++ void foo(){ prinf(\u0026#34;%s\\n\u0026#34;, \u0026#34;This is a C function\u0026#34;) } Bash # This is a bash command cd dir \u0026amp;\u0026amp; echo $PWD; # Return exit 0; Tables Pages Elements 1 Text 2 Code 3 Tables ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://akifmt.github.io/projects/project2/","summary":"Table of contents Table of contents Text Code Python C/C++ Bash Tables Text Some example text\nCode Python def foo(): print (\u0026#34;This is a python function\u0026#34;) C/C++ void foo(){ prinf(\u0026#34;%s\\n\u0026#34;, \u0026#34;This is a C function\u0026#34;) } Bash # This is a bash command cd dir \u0026amp;\u0026amp; echo $PWD; # Return exit 0; Tables Pages Elements 1 Text 2 Code 3 Tables ","tags":null,"title":"project2en"}]