<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blazor on akifmt</title><link>https://akifmt.github.io/categories/blazor/</link><description>Recent content in Blazor on akifmt</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 08 Jun 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://akifmt.github.io/categories/blazor/index.xml" rel="self" type="application/rss+xml"/><item><title>Blazor Radzen .NET 8 Google Maps</title><link>https://akifmt.github.io/dotnet/2024-06-08-blazor-radzen-.net8-google-maps/</link><pubDate>Sat, 08 Jun 2024 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2024-06-08-blazor-radzen-.net8-google-maps/</guid><description>Blazor Radzen .NET 8 Google Maps Blazor: Blazor is a web framework for building interactive client-side web applications using C# instead of JavaScript. It allows developers to write code in C# and have it run directly in the browser.
Radzen: Radzen is a low-code development platform that provides tools and components for building web applications. It simplifies the development process by generating code and providing a visual interface for designing user interfaces.</description></item><item><title>Blazor Radzen .NET 8 Serilog Logging to Console, File and Database</title><link>https://akifmt.github.io/dotnet/2024-05-29-blazor-radzen-.net8-serilog-logging/</link><pubDate>Wed, 29 May 2024 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2024-05-29-blazor-radzen-.net8-serilog-logging/</guid><description>Blazor Radzen .NET 8 Serilog Logging to Console, File and Database Logging: Logging is the process of recording events, messages, or exceptions that occur during the execution of an application. It helps developers understand the behavior of the application, diagnose issues, and track its performance. Logging is an essential aspect of software development and plays a crucial role in maintaining and troubleshooting applications.
Serilog: Serilog is a popular logging library for .</description></item><item><title>Blazor Radzen .NET 8 Html Editor</title><link>https://akifmt.github.io/dotnet/2024-05-15-blazor-radzen-.net8-htmleditor/</link><pubDate>Wed, 15 May 2024 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2024-05-15-blazor-radzen-.net8-htmleditor/</guid><description>Blazor Radzen .NET 8 Html Editor Blazor: Blazor is a framework for building interactive web UIs using C# instead of JavaScript. Radzen: Radzen is a suite of tools that provides UI components for Blazor applications. .NET 8: .NET 8 is the latest version of the .NET framework that supports Blazor development. Html Editor: An HTML editor is a tool that enables users to create, edit, and format HTML content.</description></item><item><title>Blazor Radzen .NET 8 Multiple Themes Dark and Light Mode</title><link>https://akifmt.github.io/dotnet/2024-05-04-blazor-radzen-.net8-multiple-themes-dark-and-light-mode/</link><pubDate>Sat, 04 May 2024 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2024-05-04-blazor-radzen-.net8-multiple-themes-dark-and-light-mode/</guid><description>Blazor Radzen .NET 8 Multiple Themes Dark and Light Mode We are implementing dynamic theme switching in a Blazor application using Radzen. The code allows users to switch between different themes (e.g., default, dark, humanistic, software, standard, material) based on their preference.
.NET 8: .NET 8 is a version of the .NET framework that provides developers with a platform to build various types of applications. It offers improved performance, security, and features for developing modern applications.</description></item><item><title>Blazor .NET 8 Server-side Rendering (SSR)</title><link>https://akifmt.github.io/dotnet/2024-01-16-blazor-.net8-server-side-rendering-ssr/</link><pubDate>Tue, 16 Jan 2024 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2024-01-16-blazor-.net8-server-side-rendering-ssr/</guid><description>Blazor .NET 8 Server-side Rendering (SSR) Blazor .NET 8 offers several rendering options, including Server-side Rendering (SSR). SSR allows the initial rendering of a Blazor application to be performed on the server before being sent to the client. This approach provides benefits such as improved performance, SEO-friendliness, and better accessibility.
In Blazor .NET 8, there are two main ways to implement SSR: Global SSR with Prerendering and Per Page/Component SSR with Prerendering.</description></item><item><title>Blazor .NET 8 Hosting Models</title><link>https://akifmt.github.io/dotnet/2024-01-13-blazor-.net8-hosting-models/</link><pubDate>Sat, 13 Jan 2024 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2024-01-13-blazor-.net8-hosting-models/</guid><description>Blazor .NET8 Hosting Models Blazor, a web framework developed by Microsoft, offers three hosting models: Blazor Server, Blazor WebAssembly, and Blazor Hybrid. Each hosting model has its own unique characteristics and use cases.
Blazor Server With the Blazor Server hosting model, components are executed on the server from within an ASP.NET Core app. UI updates, event handling, and JavaScript calls are handled over a SignalR connection using the WebSockets protocol.</description></item></channel></rss>