<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>akifmt</title><link>https://akifmt.github.io/</link><description>Recent content on akifmt</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 04 May 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://akifmt.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Blazor Radzen .NET 8 Multiple Themes Dark and Light Mode</title><link>https://akifmt.github.io/dotnet/2024-05-04-blazor-radzen-.net8-multiple-themes-dark-and-light-mode/</link><pubDate>Sat, 04 May 2024 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2024-05-04-blazor-radzen-.net8-multiple-themes-dark-and-light-mode/</guid><description>Blazor Radzen .NET 8 Multiple Themes Dark and Light Mode We are implementing dynamic theme switching in a Blazor application using Radzen. The code allows users to switch between different themes (e.g., default, dark, humanistic, software, standard, material) based on their preference.
.NET 8: .NET 8 is a version of the .NET framework that provides developers with a platform to build various types of applications. It offers improved performance, security, and features for developing modern applications.</description></item><item><title>Blazor .NET 8 Autocompile Sass and Less</title><link>https://akifmt.github.io/dotnet/2024-04-16-blazor-.net8-autocompile-sass-and-less/</link><pubDate>Tue, 16 Apr 2024 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2024-04-16-blazor-.net8-autocompile-sass-and-less/</guid><description>Blazor .NET 8 Autocompile Sass and Less Sass: Sass is a CSS preprocessor that simplifies styling by providing features like variables, nesting, and mixins. It allows for more organized and efficient CSS code.
Less: Less is another CSS preprocessor that offers similar features to Sass, enabling developers to write cleaner and more maintainable stylesheets.
Autocompile: Autocompilation refers to the automatic conversion of Sass or Less files into standard CSS files whenever changes are made to the source files.</description></item><item><title>Blazor .NET 8 Microservices 2 Blazor Client Ocelot Gateway and Securing API with Duende Identity Server</title><link>https://akifmt.github.io/dotnet/2024-04-05-blazor-.net8-microservices-2-blazor-client-ocelot-gateway-and-securing-api-with-duende-identity-server/</link><pubDate>Fri, 05 Apr 2024 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2024-04-05-blazor-.net8-microservices-2-blazor-client-ocelot-gateway-and-securing-api-with-duende-identity-server/</guid><description>Blazor .NET 8 Microservices 2 Blazor Client Ocelot Gateway and Securing API with Duende Identity Server Part 1: Demonstrates ASP.NET Core Web API, Blazor Web App and Securing API with Duende Identity Server Click here Part 1
Part 2: Demonstrates Ocelot Gateway in a Blazor .NET 8 application. Click here Part 2
Projects Project Name Port Template Microser.IdS :5001 Duende IdentityServer with Entity Framework Stores (Duende Software) Microser.API.Weather :6001 ASP.</description></item><item><title>Blazor .NET 8 Microservices Blazor Client and Securing API with Duende Identity Server</title><link>https://akifmt.github.io/dotnet/2024-03-15-blazor-.net8-microservices-blazor-client-and-securing-api-with-duende-identity-server/</link><pubDate>Fri, 15 Mar 2024 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2024-03-15-blazor-.net8-microservices-blazor-client-and-securing-api-with-duende-identity-server/</guid><description>Blazor .NET 8 Microservices Blazor Client and Securing API with Duende Identity Server A Blazor .NET 8 microservices client application and integrates it with Duende Identity Server for securing the API endpoints. The code demonstrates the configuration of services, authentication, authorization, and HTTP request pipeline setup.
Blazor: Blazor is a framework for building interactive web UIs using C# instead of JavaScript. It allows developers to create web applications using .</description></item><item><title>Blazor .NET 8 and Minimal APIs Native AOT CRUD</title><link>https://akifmt.github.io/dotnet/2024-02-12-blazor-.net8-and-minimal-apis-native-aot-crud/</link><pubDate>Mon, 12 Feb 2024 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2024-02-12-blazor-.net8-and-minimal-apis-native-aot-crud/</guid><description>Blazor .NET 8 and Minimal APIs Native AOT CRUD Let&amp;rsquo;s briefly discuss the key concepts involved in this Blazor app and Minimal APIs Native AOT CRUD implementation:
Blazor: Blazor is a web framework that allows developers to build interactive web UIs using C# instead of JavaScript. It enables the development of single-page applications (SPAs) with the power of .NET.
Minimal APIs: Minimal APIs is a new feature introduced in .</description></item><item><title>Setting up Teamcity Hassle-Free CI/CD Tool on Self-hosted Server</title><link>https://akifmt.github.io/posts/2024-02-11-settingupteamcityhassle-freeci-cdtoolonselfhostedserver/</link><pubDate>Sun, 11 Feb 2024 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/posts/2024-02-11-settingupteamcityhassle-freeci-cdtoolonselfhostedserver/</guid><description>Setting up Teamcity Hassle-Free CI/CD Tool on Self-hosted Server TeamCity, developed by JetBrains, is a continuous integration and continuous delivery (CI/CD) platform designed to automate and streamline the software development process. It helps development teams efficiently build, test, and deploy software applications, accelerating development cycles and delivering high-quality code faster.
Step 1 Download TeamCity
Head to the JetBrains website: https://www.jetbrains.com/teamcity/download/ Choose the &amp;quot;Executable Windows installer bundled with Tomcat and Java&amp;quot; option.</description></item><item><title>Blazor .NET 8 Object Mapping with AutoMapper</title><link>https://akifmt.github.io/dotnet/2024-02-09-blazor-.net8-object-mapping-with-automapper/</link><pubDate>Fri, 09 Feb 2024 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2024-02-09-blazor-.net8-object-mapping-with-automapper/</guid><description>Blazor .NET 8 Object Mapping with AutoMapper How to perform object mapping in a Blazor application using AutoMapper. Object mapping is the process of converting one object type to another, which can be useful when transferring data between different layers of an application or when displaying data in a different format.
AutoMapper: AutoMapper is a popular object-to-object mapping library in the .NET ecosystem. It simplifies the process of mapping one object to another by automatically matching properties with similar names and types.</description></item><item><title>Blazor .NET 8 Object Mapping with Mapster</title><link>https://akifmt.github.io/dotnet/2024-01-24-blazor-.net8-object-mapping-with-mapster/</link><pubDate>Wed, 24 Jan 2024 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2024-01-24-blazor-.net8-object-mapping-with-mapster/</guid><description>Blazor .NET 8 Object Mapping with Mapster In a Blazor application, object mapping is a common task that involves converting data from one object type to another. This is often required when working with data transfer objects (DTOs) or when mapping data between different layers of an application. Mapster is a popular mapping library in the .NET ecosystem that provides a simple and efficient way to perform object mapping in Blazor applications.</description></item><item><title>Blazor .NET 8 Migrating app from .NET 6 or .NET 7 to .NET 8</title><link>https://akifmt.github.io/dotnet/2024-01-20-blazor-.net8-migrating-app-from-.net-6-or-.net-7-to-.net-8/</link><pubDate>Sat, 20 Jan 2024 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2024-01-20-blazor-.net8-migrating-app-from-.net-6-or-.net-7-to-.net-8/</guid><description>Blazor .NET 8 Migrating app from .NET 6 or .NET 7 to .NET 8 Migrating your Blazor app from .NET 6 or .NET 7 to .NET 8 can bring several benefits, including improved performance, enhanced features, and bug fixes. Here are the steps you can follow to migrate your app successfully.
(Old) Request Flow Request → _Host → App → Component
(New) Request Flow Request → App → Routes → Component</description></item><item><title>Blazor .NET 8 Server-side Rendering (SSR)</title><link>https://akifmt.github.io/dotnet/2024-01-16-blazor-.net8-server-side-rendering-ssr/</link><pubDate>Tue, 16 Jan 2024 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2024-01-16-blazor-.net8-server-side-rendering-ssr/</guid><description>Blazor .NET 8 Server-side Rendering (SSR) Blazor .NET 8 offers several rendering options, including Server-side Rendering (SSR). SSR allows the initial rendering of a Blazor application to be performed on the server before being sent to the client. This approach provides benefits such as improved performance, SEO-friendliness, and better accessibility.
In Blazor .NET 8, there are two main ways to implement SSR: Global SSR with Prerendering and Per Page/Component SSR with Prerendering.</description></item><item><title>Blazor .NET 8 Hosting Models</title><link>https://akifmt.github.io/dotnet/2024-01-13-blazor-.net8-hosting-models/</link><pubDate>Sat, 13 Jan 2024 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2024-01-13-blazor-.net8-hosting-models/</guid><description>Blazor .NET8 Hosting Models Blazor, a web framework developed by Microsoft, offers three hosting models: Blazor Server, Blazor WebAssembly, and Blazor Hybrid. Each hosting model has its own unique characteristics and use cases.
Blazor Server With the Blazor Server hosting model, components are executed on the server from within an ASP.NET Core app. UI updates, event handling, and JavaScript calls are handled over a SignalR connection using the WebSockets protocol.</description></item><item><title>Blazor Infinite Scrolling</title><link>https://akifmt.github.io/dotnet/2023-10-16-blazor-infinite-scrolling/</link><pubDate>Mon, 16 Oct 2023 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2023-10-16-blazor-infinite-scrolling/</guid><description>Blazor Infinite Scrolling Blazor: Blazor is a web framework developed by Microsoft that allows developers to build interactive web UIs using C# instead of JavaScript. It enables full-stack web development with .NET.
Infinite Scrolling: Infinite scrolling is a technique where new data is loaded and displayed as the user scrolls down the page. It provides a smooth and continuous browsing experience without the need for manual pagination.
Razor Components: Razor Components is a part of Blazor that allows developers to build reusable UI components using a combination of HTML and C#.</description></item><item><title>Blazor Export Data to Word, Excel, PDF, CSV</title><link>https://akifmt.github.io/dotnet/2023-09-26-blazor-export-data-to-word-excel-pdf-csv/</link><pubDate>Tue, 26 Sep 2023 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2023-09-26-blazor-export-data-to-word-excel-pdf-csv/</guid><description>Blazor Export Data to Word, Excel, PDF, CSV We will explore how to export data to various file formats such as Word, Excel, PDF, and CSV using Blazor, a web framework for building interactive user interfaces.
Blazor: Blazor is a web framework that allows developers to build interactive web applications using C# instead of JavaScript. It enables the creation of rich UI components and provides a seamless integration between the client and server.</description></item><item><title>Blazor External Login Identity Provider Google, Facebook, Microsoft, Twitter</title><link>https://akifmt.github.io/dotnet/2023-09-21-blazor-external-login-identity-provider/</link><pubDate>Thu, 21 Sep 2023 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2023-09-21-blazor-external-login-identity-provider/</guid><description>Blazor External Login Identity Provider Google, Facebook, Microsoft, Twitter we will explore how to configure external login identity providers in a Blazor application using the appsettings.json file. We will specifically focus on configuring Google, Facebook, Microsoft, and Twitter as external login providers.
Blazor: Blazor is a web framework that allows developers to build interactive web UIs using C# instead of JavaScript. It enables full-stack development with .NET.
Authentication: Authentication is the process of verifying the identity of a user.</description></item><item><title>Blazor Radzen Loading on Page</title><link>https://akifmt.github.io/dotnet/2023-09-10-blazor-radzen-loading-on-page/</link><pubDate>Sun, 10 Sep 2023 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2023-09-10-blazor-radzen-loading-on-page/</guid><description>Blazor Radzen Loading on Page Blazor: Blazor is a web framework that allows developers to build interactive web UIs using C# instead of JavaScript. It enables full-stack development with .NET.
Radzen: Radzen is a set of UI components for Blazor that provides ready-to-use components for building responsive and user-friendly web applications.
Loading Indicator: A loading indicator is a visual element that indicates the progress of an ongoing operation, such as data loading or processing.</description></item><item><title>Blazor Send Email with MailKit</title><link>https://akifmt.github.io/dotnet/2023-09-03-blazor-send-email-with-mailkit/</link><pubDate>Sun, 03 Sep 2023 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2023-09-03-blazor-send-email-with-mailkit/</guid><description>Blazor Send Email with MailKit How to send emails using MailKit in a Blazor application. MailKit is a cross-platform .NET library that provides a simple and efficient way to send and receive emails. We will create a class called EmailConfiguration to store the email server configuration settings.
MailKit: MailKit is an open-source .NET library that provides a high-level API for sending and receiving emails using various protocols such as SMTP, POP3, and IMAP.</description></item><item><title>Blazor Redis as Backplane</title><link>https://akifmt.github.io/dotnet/2023-08-30-blazor-redis-as-backplane/</link><pubDate>Wed, 30 Aug 2023 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2023-08-30-blazor-redis-as-backplane/</guid><description>Blazor Redis as Backplane (with Master and Slave) Blazor: Blazor is a web framework developed by Microsoft that allows developers to build interactive web applications using C# instead of JavaScript. It enables the creation of single-page applications (SPAs) that run entirely in the browser.
Redis: Redis is an open-source, in-memory data structure store that can be used as a database, cache, and message broker. It provides high-performance data storage and retrieval, making it suitable for use in applications that require fast and scalable data access.</description></item><item><title>Blazor Resize and Upload Images</title><link>https://akifmt.github.io/dotnet/2023-08-25-blazor-resize-and-upload-images/</link><pubDate>Fri, 25 Aug 2023 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2023-08-25-blazor-resize-and-upload-images/</guid><description>Blazor Resize and Upload Images Upload and save images in a Blazor application using C#. We will cover the process of uploading an image, resizing it if necessary, generating a random file name, and saving it to the server&amp;rsquo;s wwwroot directory.
InputFile: The InputFile component in Blazor allows users to select files from their local system. It triggers an event when the file selection changes.
File Size Limit: We can set a maximum file size limit to restrict the size of the uploaded image.</description></item><item><title>Blazor Scheduling with Quartz.NET</title><link>https://akifmt.github.io/dotnet/2023-08-18-blazor-scheduling-with-quartz.net/</link><pubDate>Fri, 18 Aug 2023 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2023-08-18-blazor-scheduling-with-quartz.net/</guid><description>Blazor Scheduling with Quartz.NET Blazor: Blazor is a web framework that allows developers to build interactive web UIs using C# instead of JavaScript. It enables full-stack development with .NET.
Quartz.NET: Quartz.NET is a popular open-source job scheduling library for .NET applications. It provides a flexible and powerful way to schedule and execute jobs at specified intervals.
Scheduling: Scheduling refers to the process of defining when and how often a job or task should be executed.</description></item><item><title>Blazor Serilog Logging to Console, File and Database</title><link>https://akifmt.github.io/dotnet/2023-08-15-blazor-serilog-logging/</link><pubDate>Tue, 15 Aug 2023 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2023-08-15-blazor-serilog-logging/</guid><description>Blazor Serilog Logging to Console, File and Database Logging: Logging is the process of recording events, messages, or exceptions that occur during the execution of an application. It helps developers understand the behavior of the application, diagnose issues, and track its performance. Logging is an essential aspect of software development and plays a crucial role in maintaining and troubleshooting applications.
Serilog: Serilog is a popular logging library for .NET applications.</description></item><item><title>Blazor Implementing Google reCAPTCHA v2</title><link>https://akifmt.github.io/dotnet/2023-08-13-blazor-implementing-google-recaptcha-v2/</link><pubDate>Sun, 13 Aug 2023 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2023-08-13-blazor-implementing-google-recaptcha-v2/</guid><description>Blazor Implementing Google reCAPTCHA v2 How to implement Google reCAPTCHA v2 in a Blazor application using C#. Google reCAPTCHA is a free service provided by Google that helps protect websites from spam and abuse. It uses advanced risk analysis techniques to distinguish between humans and bots.
Site Key: A unique key provided by Google when you register your website to use reCAPTCHA. It is used to identify your website when making API requests.</description></item><item><title>Blazor Implementing Google reCAPTCHA v3</title><link>https://akifmt.github.io/dotnet/2023-08-11-blazor-implementing-google-recaptcha-v3/</link><pubDate>Fri, 11 Aug 2023 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2023-08-11-blazor-implementing-google-recaptcha-v3/</guid><description>Blazor Implementing Google reCAPTCHA v3 Google reCAPTCHA v3 in a Blazor application. Google reCAPTCHA is a service that helps protect websites from spam and abuse by verifying that the user is a human and not a bot. reCAPTCHA v3 is the latest version of this service and provides a seamless user experience without requiring any user interaction.
Site Key: A unique identifier for your website, obtained from the reCAPTCHA admin console.</description></item><item><title>Blazor Radzen Globalization and Localization</title><link>https://akifmt.github.io/dotnet/2023-08-09-blazor-radzen-globalization-and-localization/</link><pubDate>Wed, 09 Aug 2023 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2023-08-09-blazor-radzen-globalization-and-localization/</guid><description>Blazor Radzen Globalization and Localization The concept of globalization and localization in Blazor, a popular framework for building web applications. We will specifically focus on how to implement globalization and localization using Radzen, a set of UI components for Blazor. We will explore the code provided and understand its functionality.
Globalization: Globalization refers to the process of designing and developing applications that can be adapted to various cultures and languages.</description></item><item><title>Blazor Using NPM Packages</title><link>https://akifmt.github.io/dotnet/2023-08-07-blazor-using-npm-packages/</link><pubDate>Mon, 07 Aug 2023 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2023-08-07-blazor-using-npm-packages/</guid><description>Blazor Using NPM Packages Create a new folder named npm_packages in your Blazor project.
Open the npm_packages folder directory via command prompt and run the following command to initialize NPM in the application:
npm init -y This will create a new package.json file in the npm_packages directory.
Install the webpack and webpack-cli packages as development dependencies by running the following command: npm install webpack webpack-cli --save-dev Modify the scripts section of the package.</description></item><item><title>Blazor Generic Components</title><link>https://akifmt.github.io/dotnet/2023-08-05-blazor-generic-components/</link><pubDate>Sat, 05 Aug 2023 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2023-08-05-blazor-generic-components/</guid><description>Blazor Generic Components We will explore a Blazor generic component that can be used for performing CRUD (Create, Read, Update, Delete) operations on a list of items. This component is designed to provide a reusable and efficient solution for displaying and managing data in a Blazor application.
Blazor: Blazor is a web framework that allows developers to build interactive web UIs using C# instead of JavaScript. It enables full-stack development with .</description></item><item><title>Blazor Expose a Feed as RSS</title><link>https://akifmt.github.io/dotnet/2023-08-02-blazor-rssfeed/</link><pubDate>Wed, 02 Aug 2023 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2023-08-02-blazor-rssfeed/</guid><description>Blazor Expose a Feed as RSS In this example, we will explore how to expose a feed as RSS using C# and the Blazor framework. We will create a controller that generates an RSS feed based on mock data.
RSS (Really Simple Syndication): RSS is a web feed format used to publish frequently updated content, such as blog posts, news headlines, or podcasts. It allows users to subscribe to a website&amp;rsquo;s content and receive updates in a standardized format.</description></item><item><title>Blazor EF Migrations with Multiple Providers</title><link>https://akifmt.github.io/dotnet/2023-07-31-blazor-ef-multipledbproviders/</link><pubDate>Mon, 31 Jul 2023 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2023-07-31-blazor-ef-multipledbproviders/</guid><description>Blazor Blazor Entity Framework Migrations with Multiple Providers This code demonstrates how to implement multiple database providers in a Blazor application using C#. It allows you to switch between different database providers, such as InMemory, SQLite, and SQL Server, based on the configuration settings.
Database Provider: Refers to the type of database being used, such as InMemory, SQLite, or SQL Server.
Connection String: A string that contains the necessary information to connect to a specific database.</description></item><item><title>Blazor Authentication and Authorization</title><link>https://akifmt.github.io/dotnet/2023-07-30-blazor-authentication-authorization/</link><pubDate>Sun, 30 Jul 2023 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2023-07-30-blazor-authentication-authorization/</guid><description>Blazor Authentication and Authorization This example represents a Blazor application that allows users to view a list of blog posts. The application uses ASP.NET Core and Blazor authentication and authorization to control access to the blog posts.
Before diving into the code, let&amp;rsquo;s understand some key concepts related to Blazor:
Blazor: Blazor is a web framework that allows developers to build interactive web UIs using C# instead of JavaScript. It enables developers to write code that runs on the client-side in the browser using WebAssembly or on the server-side using SignalR.</description></item><item><title>Blazor Radzen CRUD</title><link>https://akifmt.github.io/dotnet/2023-07-26-blazor-radzen-crud/</link><pubDate>Wed, 26 Jul 2023 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2023-07-26-blazor-radzen-crud/</guid><description>Blazor Radzen CRUD In this article, we will explore the code for a Blazor page called &amp;ldquo;BlogPost&amp;rdquo;. This page displays a list of blog posts using a RadzenDataGrid component. We will go through the key concepts, code structure, and code examples to understand how this page works.
Before diving into the code, let&amp;rsquo;s understand some key concepts related to Blazor and RadzenDataGrid:
Blazor: Blazor is a web framework that allows developers to build interactive web UIs using C# instead of JavaScript.</description></item><item><title>Blazor Radzen Search Comp.</title><link>https://akifmt.github.io/dotnet/2023-07-21-blazor-radzen-searchcomponent/</link><pubDate>Fri, 21 Jul 2023 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2023-07-21-blazor-radzen-searchcomponent/</guid><description>Blazor Radzen SearchComponent 1. Blazor Radzen List Page The code provided is a Blazor component that demonstrates how to fetch data from a service and display it in a RadzenDataList component. It also includes a custom search component that allows users to search for specific blog posts.
Blazor: Blazor is a web framework for building interactive client-side web applications using C# instead of JavaScript. It allows developers to write code in C# that runs on the client-side, eliminating the need for JavaScript.</description></item><item><title>Blazor Plyr Video Player</title><link>https://akifmt.github.io/dotnet/2023-07-20-blazor-plyr-video-player/</link><pubDate>Thu, 20 Jul 2023 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/dotnet/2023-07-20-blazor-plyr-video-player/</guid><description>Blazor Plyr Video Player This code provides a video player component in a Blazor application. It allows users to watch videos with controls and captions. The video player is customizable using the Plyr.io library.
Blazor: Blazor is a web framework that allows developers to build interactive web UIs using C# instead of JavaScript. It enables full-stack development with .NET. Plyr.io: Plyr.io is a JavaScript library that provides a customizable video player with a modern UI.</description></item><item><title>Programming</title><link>https://akifmt.github.io/posts/2023-07-01-programming/</link><pubDate>Sat, 01 Jul 2023 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/posts/2023-07-01-programming/</guid><description>Programming A programming language is a formal computer language designed to communicate instructions to a machine, particularly a computer. Programming languages can be used to create programs to control the behavior of a machine or to express algorithms. (Source: wikipedia)
Object Oriented Programming(OOP) Object Oriented Programming(OOP) is a programming paradigm based on the concept of objects, which may contain data, in the form of fields, often known as attributes; and code, in the form of procedures, often known as methods.</description></item><item><title>Node.js Deployment and Publishing on IIS - iisnode</title><link>https://akifmt.github.io/posts/2019-08-08-iisnode.js/</link><pubDate>Thu, 08 Aug 2019 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/posts/2019-08-08-iisnode.js/</guid><description>Node.js Deployment and Publishing on IIS - iisnode
Tested on Windows Server 2016 x64 and IIS 10.0. All the requirements for different versions are the same, only the appropriate version for iisnode should be installed.
Requirements:
WebPlatformInstaller: WebPlatformInstaller IIS URL Rewrite extension: IIS URL Rewrite extension Node.js: node.js iisnode v0.22.1 x64 : iisnode v0.22.1 x64 After installation, the project should have &amp;ldquo;web.config&amp;rdquo;. The following config example can also be used with Express Framework.</description></item><item><title>Combining NodeJS Versions</title><link>https://akifmt.github.io/posts/2019-02-10-nodejsfarklisurumleribiraradakullanma/</link><pubDate>Sun, 10 Feb 2019 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/posts/2019-02-10-nodejsfarklisurumleribiraradakullanma/</guid><description>Combining NodeJS Versions;
# Setup: npm install -g nvmw # nvmw install nvmw install v8.12.0 # installation of the versions to be used nvmw use v8.12.0 # Use the specific version # Use: nvmw help # help nvmw install [version] # Version install [version] nvmw uninstall [version] # Uninstall version [version] nvmw use [version] # Change version [version] nvmw ls # List of installed versions NodeJS Releases List: Versions</description></item><item><title>VNC Server on Google Cloud Ubuntu</title><link>https://akifmt.github.io/posts/2017-09-21-googlecloudubuntuvnc/</link><pubDate>Thu, 21 Sep 2017 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/posts/2017-09-21-googlecloudubuntuvnc/</guid><description>VNC Server on Google Cloud Ubuntu 16.04;
# Updates: sudo apt-get update sudo apt-get upgrade # Setup: sudo apt install xfce4 xfce4-goodies tightvncserver vncserver vncserver -kill :1 mv ~/.vnc/xstartup ~/.vnc/xstartup.bak nano ~/.vnc/xstartup xstartup content: #!/bin/bash xrdb $HOME/.Xresources startxfce4 &amp;amp; sudo chmod +x ~/.vnc/xstartup vncserver To connect via Windows: Download link</description></item><item><title>Torch, OpenCV Installation and Test</title><link>https://akifmt.github.io/posts/2017-05-27-torchveopencvkurulum/</link><pubDate>Sat, 27 May 2017 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/posts/2017-05-27-torchveopencvkurulum/</guid><description>OpenCV and Torch installation on Ubuntu 16.04;
# Updates: sudo apt-get update sudo apt-get upgrade shutdown -r 0 sudo apt-get install git #Torch Installation #Run in terminal in order: git clone https://github.com/torch/distro.git ~/torch --recursive cd ~/torch; bash install-deps; ./install.sh source ~/.bashrc source ~/.profile #OpenCV Installation: sudo apt-get install cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev 2015-12-21 VERSION 3.1 OpenCV for Linux/Mac cd ~ wget https://github.com/Itseez/opencv/archive/3.1.0.zip --no-check-certificate unzip 3.1.0.zip cd opencv-3.</description></item><item><title>Edit EPub Cover</title><link>https://akifmt.github.io/posts/2017-05-02-epubcover/</link><pubDate>Tue, 02 May 2017 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/posts/2017-05-02-epubcover/</guid><description>
The cover pages of some e-books do not appear on other devices due to incompatibility. The solution for this is caliber. It provides the opportunity to edit not only the cover page but also the content. Download link
To edit the cover page; It will be enough to edit the following line with the &amp;ldquo;Edit Metadata&amp;rdquo; option or add it if it does not exist.
&amp;lt;item id=&amp;#34;cover_image&amp;#34; href=&amp;#34;cover.jpg&amp;#34; media-type=&amp;#34;image/jpeg&amp;#34;&amp;gt;</description></item><item><title>Game Theory - Prisoner's Dilemma and Nash Equilibrium</title><link>https://akifmt.github.io/posts/2017-03-16-prisonersdilemmavenashdengesi/</link><pubDate>Thu, 16 Mar 2017 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/posts/2017-03-16-prisonersdilemmavenashdengesi/</guid><description>Get two people caught. If one testifies against the other and the other remains silent, the witness will be released, and the party who chooses to remain silent will be sentenced to 20 years in prison. If both remain silent, they will be sentenced to 1 year each. If both testify against each other, they will each be sentenced to 5 years.
The optimal option of the two is to keep both silent.</description></item><item><title>shields.io</title><link>https://akifmt.github.io/posts/2017-03-19-shields.io/</link><pubDate>Thu, 16 Mar 2017 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/posts/2017-03-19-shields.io/</guid><description>A tool for the ReadMe files of projects to display the project status in a nicer way. shields.io supports many tools used for project tracking. Travis, Jenkins and even Github allow badges to be added up to the release status of the project on SourceForce.</description></item><item><title>Linux Bash Commands</title><link>https://akifmt.github.io/posts/2017-02-24-linuxbashkomutlari/</link><pubDate>Fri, 24 Feb 2017 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/posts/2017-02-24-linuxbashkomutlari/</guid><description>Active folder: pwd Appearance: ls &amp;#39;Detailed View Parameters: -l *detailed* -lrt *detailed* -d *folder* -r *read* -w *write* -x *execute*&amp;#39; Active Folder Change: cd &amp;lt;folder name&amp;gt; File Creation: touch &amp;lt;filename&amp;gt; Displayed: ctrl+k &amp;#39;delete to the right&amp;#39; echo &amp;#34;hello world&amp;#34; echo &amp;#34;hello coders&amp;#34; &amp;gt; filename &amp;#39;Send output to file&amp;#39; echo $? &amp;#39;Returns the result of the last operation (0 successful)&amp;#39; cat filename &amp;#39;prints file contents&amp;#39; more filename &amp;#39;prints file contents&amp;#39; less filename &amp;#39;prints file contents&amp;#39; nano filename &amp;#39;opens with nano text editor&amp;#39; vim filename &amp;#39;opens with vim text editor&amp;#39; head -n 5 output-1.</description></item><item><title>VMware and Hyper-V Combine</title><link>https://akifmt.github.io/posts/2017-02-22-hypervmwarebirlikte/</link><pubDate>Wed, 22 Feb 2017 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/posts/2017-02-22-hypervmwarebirlikte/</guid><description>To turn off Hyper-V; As administrator on cmd: bcdedit /set hypervisorlaunchtype off vmware available after reboot.
To turn Hyper-V back on As administrator on cmd: bcdedit /set hypervisorlaunchtype auto Hyper-V is available upon reboot.</description></item><item><title>Agile</title><link>https://akifmt.github.io/posts/2017-02-20-agile/</link><pubDate>Mon, 20 Feb 2017 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/posts/2017-02-20-agile/</guid><description>Agile Methodology is a practice-based method for modeling and documenting software systems effectively and efficiently.
Software projects are faced with the danger of failure due to improper use of resources, wrong prioritization and inaccurate understanding of customer demands throughout their lifecycle. According to The Standish Group&amp;rsquo;s 2009 Chaos Report, software projects fail at a rate of 68% worldwide. This has led large companies in Europe and America to try various methods to produce projects with higher productivity, and most companies have adopted Agile software development approaches, which they find most successful in management and practice.</description></item><item><title>What is Docker?</title><link>https://akifmt.github.io/posts/2016-11-24-docker/</link><pubDate>Thu, 24 Nov 2016 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/posts/2016-11-24-docker/</guid><description>What is Docker Docker is an open source project that deploy application. It works like a virtual machine, but better. Using a linux instance, it isolates itself from OS and works more secure. Docker defines itself like that on official website;
Docker containers wrap a piece of software in a complete filesystem that contains everything needed to run: code, runtime, system tools, system libraries – anything that can be installed on a server.</description></item><item><title>Android 7 Nougat</title><link>https://akifmt.github.io/posts/2016-11-02-android7nougat/</link><pubDate>Wed, 02 Nov 2016 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/posts/2016-11-02-android7nougat/</guid><description>
New features
Multi-window / running two apps on the same screen (The most important feature) New notification center Revamped settings menu Notifications settings have been enriched. We will now be able to prevent every notification from appearing. Added the ability to go to the relevant menu of the settings by long pressing the icons in the notification Refreshing battery graph</description></item><item><title>Monte Carlo Method</title><link>https://akifmt.github.io/posts/2016-10-09-montecarlometodu/</link><pubDate>Sun, 09 Oct 2016 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/posts/2016-10-09-montecarlometodu/</guid><description>Nedir: Rastgele sayılar kullanılarak sistemlerin modellenmesinde kullanılabilir. Sistemin kesin sonucunun olduğu bazı durumlarda, veya olmadığı tüm durumlarda uygulanabilir. Örnek sayısı doğru sonuçlar elde etmede büyük önem taşımaktadır. Pi sayısı hesaplama, yazı tura ve zar hesaplaması örnek gösterilebilir.
Örnek: C ile Yazı-Tura double rastgele(){ double r = (double) rand()/RAND_MAX; return r; } int main() { int i, tura, yazi, n; double r, p; printf(&amp;#34;deney sayisini girin: &amp;#34;); scanf(&amp;#34;%d&amp;#34;,&amp;amp;n); srand( time(NULL) ); for(tura=0, i=1; i&amp;lt;=n; i++){ r = rastgele(); if(r&amp;lt;0.</description></item><item><title>Raspberry Pi Remote Desktop Turkish Keyboard Problem</title><link>https://akifmt.github.io/posts/2016-09-18-raspberrypiilerdcbaglantisi/</link><pubDate>Sun, 18 Sep 2016 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/posts/2016-09-18-raspberrypiilerdcbaglantisi/</guid><description>
Problem: Raspbery Pi Remote Connection TR Keyboard Not Recognizing Solution: missing km-041f.ini file
Copy the km-041f.ini file to the /etc/xrdp/ directory on the Raspberry Pi. When xrdp is restarted, TR characters are no longer a problem.
The thing to note is that you must access the directory as root.
The step I followed; sudo pcmanfm on RasPi Copy the km-041f.ini file to /etc/xrdp/.
sudo service xrdp restart
Note: For those who have problems finding the file on the net, I downloaded it from this repo: Link</description></item><item><title>Application Sounds on Amazon AWS and Azure with Remote Desktop</title><link>https://akifmt.github.io/posts/2016-08-22-rdcileawsveazurevpsuzerindevacileses/</link><pubDate>Mon, 22 Aug 2016 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/posts/2016-08-22-rdcileawsveazurevpsuzerindevacileses/</guid><description>Since VPS devices on AWS or Azure do not have a real sound card, it is not possible to receive sound on these devices. The solution for this is VA, that is, virtual audio. Our convenient application solution is solved with VAC installation. The application creates a virtual sound driver and directs the sound to our device.
Problem: Voice over VPS Solution: Virtual Audio Cable 4.15 installation and Setup</description></item><item><title>INVICTUS, Internship in IT Security</title><link>https://akifmt.github.io/posts/2016-08-03-invictusbilisimguvenlikstajyapmak/</link><pubDate>Wed, 03 Aug 2016 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/posts/2016-08-03-invictusbilisimguvenlikstajyapmak/</guid><description>The company works on cyber security and security training. I also contacted my friend&amp;rsquo;s reference. The sincerity I saw from day one surprised me. I saw a full family relationship in the company, from management to employees. With the experienced team, they included them at every point by providing training on cyber security at a high-level security level, starting from scratch. The company is experienced in cyber security and even works towards becoming a world brand.</description></item><item><title>Playing Pokemon GO!</title><link>https://akifmt.github.io/posts/2016-07-10-pokemongooynamak/</link><pubDate>Sun, 10 Jul 2016 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/posts/2016-07-10-pokemongooynamak/</guid><description>A game that can be played on mobile platforms. The biggest innovation and feature is virtualized reality technology. Using real location information, it provides a better player experience, catching 722 Pokemon characters, trades and battles. The official introduction is as follows:</description></item><item><title>Bash Variables</title><link>https://akifmt.github.io/notes/bash/basic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/notes/bash/basic/</guid><description> Variable NAME=&amp;#34;John&amp;#34; echo $NAME echo &amp;#34;$NAME&amp;#34; echo &amp;#34;${NAME} Condition if [[ -z &amp;#34;$string&amp;#34; ]]; then echo &amp;#34;String is empty&amp;#34; elif [[ -n &amp;#34;$string&amp;#34; ]]; then echo &amp;#34;String is not empty&amp;#34; fi</description></item><item><title>Dotnet</title><link>https://akifmt.github.io/notes/dotnet/gists/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/notes/dotnet/gists/</guid><description> Startup.cs No image display bug fix appsettings.json Uploading Image</description></item><item><title>project1en</title><link>https://akifmt.github.io/projects/project1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/projects/project1/</guid><description>Table of contents Table of contents Text Code Python C/C++ Bash Tables Text Some example text
Code Python def foo(): print (&amp;#34;This is a python function&amp;#34;) C/C++ void foo(){ prinf(&amp;#34;%s\n&amp;#34;, &amp;#34;This is a C function&amp;#34;) } Bash # This is a bash command cd dir &amp;amp;&amp;amp; echo $PWD; # Return exit 0; Tables Pages Elements 1 Text 2 Code 3 Tables</description></item><item><title>project2en</title><link>https://akifmt.github.io/projects/project2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://akifmt.github.io/projects/project2/</guid><description>Table of contents Table of contents Text Code Python C/C++ Bash Tables Text Some example text
Code Python def foo(): print (&amp;#34;This is a python function&amp;#34;) C/C++ void foo(){ prinf(&amp;#34;%s\n&amp;#34;, &amp;#34;This is a C function&amp;#34;) } Bash # This is a bash command cd dir &amp;amp;&amp;amp; echo $PWD; # Return exit 0; Tables Pages Elements 1 Text 2 Code 3 Tables</description></item></channel></rss>